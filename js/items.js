"use strict";window.onload=async function(){await ExcludeUtil.pInitialise(),Renderer.item.pBuildList({fnCallback:a=>populateTablesAndFilters({item:a}),isAddGroups:!0,isBlacklistVariants:!0})};function rarityValue(a){return"None"===a?0:"Common"===a?1:"Uncommon"===a?2:"Rare"===a?3:"Very Rare"===a?4:"Legendary"===a?5:"Artifact"===a?6:"Other"===a?7:"Varies"===a?8:"Unknown (Magic)"===a?9:"Unknown"===a?10:11}function sortItems(c,a,b){return"name"===b.valueName?SortUtil.ascSortLower(a._values.name,c._values.name):"type"===b.valueName?a._values.type===c._values.type?SortUtil.compareNames(c,a):a._values.type.toLowerCase()>c._values.type.toLowerCase()?1:-1:"source"===b.valueName?a._values.source===c._values.source?SortUtil.compareNames(c,a):a._values.source.toLowerCase()>c._values.source.toLowerCase()?1:-1:"rarity"===b.valueName?a._values.rarity===c._values.rarity?SortUtil.compareNames(c,a):rarityValue(a._values.rarity)>rarityValue(c._values.rarity)?1:-1:"count"===b.valueName?SortUtil.ascSort(+c.values().count,+a.values().count):"weight"===b.valueName?SortUtil.ascSort(+c.values().weight,+a.values().weight):"cost"===b.valueName?SortUtil.ascSort(+c.values().cost,+a.values().cost):0}let mundaneList,magicList;const sourceFilter=getSourceFilter(),DEFAULT_HIDDEN_TYPES=new Set(["$","Futuristic","Modern","Renaissance"]),typeFilter=new Filter({header:"Type",deselFn:a=>DEFAULT_HIDDEN_TYPES.has(a)}),tierFilter=new Filter({header:"Tier",items:["None","Minor","Major"],itemSortFn:null}),propertyFilter=new Filter({header:"Property",displayFn:StrUtil.uppercaseFirst}),costFilter=new RangeFilter({header:"Cost",min:0,max:100,isAllowGreater:!0,suffix:"gp"}),focusFilter=new Filter({header:"Spellcasting Focus",items:["Bard","Cleric","Druid","Paladin","Sorcerer","Warlock","Wizard"]}),attachedSpellsFilter=new Filter({header:"Attached Spells",displayFn:a=>a.split("|")[0].toTitleCase(),itemSortFn:SortUtil.ascSortLower}),lootTableFilter=new Filter({header:"Found On",items:["Magic Item Table A","Magic Item Table B","Magic Item Table C","Magic Item Table D","Magic Item Table E","Magic Item Table F","Magic Item Table G","Magic Item Table H","Magic Item Table I"]});let filterBox;async function populateTablesAndFilters(a){const b=new Filter({header:"Rarity",items:["None","Common","Uncommon","Rare","Very Rare","Legendary","Artifact","Unknown","Unknown (Magic)","Other"],itemSortFn:null}),c=new Filter({header:"Attunement",items:["Yes","By...","Optional","No"],itemSortFn:null}),d=new Filter({header:"Category",items:["Basic","Generic Variant","Specific Variant","Other"],deselFn:a=>"Specific Variant"===a,itemSortFn:null}),e=new Filter({header:"Miscellaneous",items:["Ability Score Adjustment","Charges","Cursed","Magic","Mundane","Sentient"]});filterBox=await pInitFilterBox({filters:[sourceFilter,typeFilter,tierFilter,b,propertyFilter,c,d,costFilter,focusFilter,e,lootTableFilter,attachedSpellsFilter]});mundaneList=ListUtil.search({valueNames:["name","type","cost","weight","source","uniqueid"],listClass:"mundane",sortClass:"none",sortFunction:sortItems});magicList=ListUtil.search({valueNames:["name","type","weight","rarity","source","uniqueid"],listClass:"magic",sortClass:"none",sortFunction:sortItems});const f=$(`.ele-mundane`),g=$(`.ele-magic`),h=$(`.ele-mundane-and-magic`);$(`.side-label--mundane`).click(()=>{filterBox.setFromValues({Miscellaneous:{Mundane:1}}),handleFilterChange()}),$(`.side-label--magic`).click(()=>{filterBox.setFromValues({Miscellaneous:{Magic:1}}),handleFilterChange()});const i=$(`.lst__wrp-search-visible`);mundaneList.on("updated",()=>{magicList.visibleItems.length?f.toggle(!!mundaneList.visibleItems.length):f.show(),h.toggle(!!(mundaneList.visibleItems.length&&magicList.visibleItems.length));const a=mundaneList.visibleItems.length+magicList.visibleItems.length,b=mundaneList.items.length+magicList.items.length;i.html(`${a}/${b}`)}),magicList.on("updated",()=>{g.toggle(!!magicList.visibleItems.length),magicList.visibleItems.length?f.toggle(!!mundaneList.visibleItems.length):f.show(),h.toggle(!!(mundaneList.visibleItems.length&&magicList.visibleItems.length));const a=mundaneList.visibleItems.length+magicList.visibleItems.length,b=mundaneList.items.length+magicList.items.length;i.html(`${a}/${b}`)}),$(filterBox).on(FilterBox.EVNT_VALCHANGE,handleFilterChange),$("#filtertools-mundane").find("button.sort").on("click",function(a){a.stopPropagation();const b=$(this),c="asc"===b.data("sortby")?"desc":"asc";b.data("sortby",c),SortUtil.handleFilterButtonClick.call(this,"#filtertools-mundane",b,c),mundaneList.sort(b.data("sort"),{order:b.data("sortby"),sortFunction:sortItems})}),$("#filtertools-magic").find("button.sort").on("click",function(a){a.stopPropagation();const b=$(this),c="asc"===b.data("sortby")?"desc":"asc";b.data("sortby",c),SortUtil.handleFilterButtonClick.call(this,"#filtertools-magic",b,c),magicList.sort(b.data("sort"),{order:b.data("sortby"),sortFunction:sortItems})}),$("#itemcontainer").find("h3").not(":has(input)").click(function(){return"500px"===$(this).next("ul.list").css("max-height")?void $(this).siblings("ul.list").animate({maxHeight:"250px",display:"block"}):void $(this).next("ul.list").animate({maxHeight:"500px",display:"block"}).siblings("ul.list").animate({maxHeight:"0",display:"none"})});ListUtil.initSublist({valueNames:["name","weight","price","count","id"],listClass:"subitems",sortFunction:sortItems,getSublistRow:getSublistItem,onUpdate:onSublistChange});ListUtil.initGenericAddable(),addItems(a),BrewUtil.pAddBrewData().then(handleBrew).then(()=>BrewUtil.bind({list})).then(()=>BrewUtil.pAddLocalBrewData()).catch(BrewUtil.pPurgeBrew).then(async()=>{BrewUtil.makeBrewButton("manage-brew"),BrewUtil.bind({lists:[mundaneList,magicList],filterBox,sourceFilter}),await ListUtil.pLoadState(),RollerUtil.addListRollButton(),ListUtil.addListShowHide(),Hist.init(!0),ExcludeUtil.checkShowAllExcluded(itemList,$(`#pagecontent`))})}async function handleBrew(a){const b=await Renderer.item.getItemsFromHomebrew(a);addItems({item:b})}let itemList=[],itI=0;function addItems(a){if(a.item&&a.item.length){itemList=itemList.concat(a.item);const b={mundane:"",magic:""};for(;itI<itemList.length;itI++){const a=itemList[itI];if(ExcludeUtil.isExcluded(a.name,"item",a.source))continue;if(a.noDisplay)continue;Renderer.item.enhanceItem(a);const c=a.name,d=[];d.push(a.tier?a.tier:"None"),a._fTier=d,a._fProperties=a.property?a.property.map(b=>a._allPropertiesPtr[b].name).filter(a=>a):[],a._fMisc=a.sentient?["Sentient"]:[],a.curse&&a._fMisc.push("Cursed");const e="None"===a.rarity||"Unknown"===a.rarity||"Basic"===a.category;if(a._fMisc.push(e?"Mundane":"Magic"),a.ability&&a._fMisc.push("Ability Score Adjustment"),a.charges&&a._fMisc.push("Charges"),a._fCost=Parser.coinValueToNumber(a.value),(a.focus||"INS"===a.type||"SCF"===a.type)&&(a._fFocus=a.focus?!0===a.focus?["Bard","Cleric","Druid","Paladin","Sorcerer","Warlock","Wizard"]:[...a.focus]:[],"INS"!==a.type||a._fFocus.includes("Bard")||a._fFocus.push("Bard"),"SCF"===a.type))switch(a.scfType){case"arcane":{a._fFocus.includes("Sorcerer")||a._fFocus.push("Sorcerer"),a._fFocus.includes("Warlock")||a._fFocus.push("Warlock"),a._fFocus.includes("Wizard")||a._fFocus.push("Wizard");break}case"druid":{a._fFocus.includes("Druid")||a._fFocus.push("Druid");break}case"holy":a._fFocus.includes("Cleric")||a._fFocus.push("Cleric"),a._fFocus.includes("Paladin")||a._fFocus.push("Paladin");}e?b.mundane+=`
			<li class="row" ${FLTR_ID}=${itI} onclick="ListUtil.toggleSelected(event, this)" oncontextmenu="ListUtil.openContextMenu(event, this)">
				<a id="${itI}" href="#${UrlUtil.autoEncodeHash(a)}" title="${c}">
					<span class="name col-3 pl-0">${c}</span>
					<span class="type col-4-3">${a.typeListText}</span>
					<span class="col-1-5 text-center">${a.value||a.valueMult?Parser.itemValueToFull(a,!0).replace(/ +/g,"\xA0"):"\u2014"}</span>
					<span class="col-1-5 text-center">${Parser.itemWeightToFull(a,!0)||"\u2014"}</span>
					<span class="source col-1-7 text-center ${Parser.sourceJsonToColor(a.source)} pr-0" title="${Parser.sourceJsonToFull(a.source)}" ${BrewUtil.sourceJsonToStyle(a.source)}>${Parser.sourceJsonToAbv(a.source)}</span>
					
					<span class="cost hidden">${a._fCost}</span>
					<span class="weight hidden">${Parser.weightValueToNumber(a.weight)}</span>
					<span class="uniqueid hidden">${a.uniqueId?a.uniqueId:itI}</span>
				</a>
			</li>`:b.magic+=`
			<li class="row" ${FLTR_ID}=${itI} onclick="ListUtil.toggleSelected(event, this)" oncontextmenu="ListUtil.openContextMenu(event, this)">
				<a id="${itI}" href="#${UrlUtil.autoEncodeHash(a)}" title="${c}">
					<span class="name col-3-5 pl-0">${c}</span>
					<span class="type col-3-3">${a.typeListText}</span>
					<span class="col-1-5 text-center">${Parser.itemWeightToFull(a,!0)||"\u2014"}</span>
					<span class="rarity col-2">${a.rarity}</span>
					<span class="source col-1-7 text-center ${Parser.sourceJsonToColor(a.source)} pr-0" title="${Parser.sourceJsonToFull(a.source)}" ${BrewUtil.sourceJsonToStyle(a.source)}>${Parser.sourceJsonToAbv(a.source)}</span>
					
					<span class="weight hidden">${Parser.weightValueToNumber(a.weight)}</span>
					<span class="uniqueid hidden">${a.uniqueId?a.uniqueId:itI}</span>
				</a>
			</li>`,sourceFilter.addItem(a.source),a.procType.forEach(a=>typeFilter.addItem(a)),d.forEach(a=>tierFilter.addItem(a)),a._fProperties.forEach(a=>propertyFilter.addItem(a)),attachedSpellsFilter.addItem(a.attachedSpells),lootTableFilter.addItem(a.lootTables)}const c=ListUtil.getSearchTermAndReset(mundaneList,magicList);$("ul.list.mundane").append(b.mundane),$("ul.list.magic").append(b.magic),$(`h3.ele-mundane span.side-label`).text("Mundane"),$(`h3.ele-magic span.side-label`).text("Magic"),mundaneList.reIndex(),magicList.reIndex(),c&&(mundaneList.search(c),magicList.search(c)),mundaneList.sort("name",{order:"desc"}),magicList.sort("name",{order:"desc"}),filterBox.render(),handleFilterChange(),ListUtil.setOptions({itemList:itemList,getSublistRow:getSublistItem,primaryLists:[mundaneList,magicList]}),ListUtil.bindAddButton(),ListUtil.bindSubtractButton(),Renderer.hover.bindPopoutButton(itemList),UrlUtil.bindLinkExportButton(filterBox),ListUtil.bindDownloadButton(),ListUtil.bindUploadButton()}}function handleFilterChange(){function a(a){const c=itemList[$(a.elm).attr(FLTR_ID)];return filterBox.toDisplay(b,c.source,c.procType,c._fTier,c.rarity,c._fProperties,c.attunementCategory,c.category,c._fCost,c._fFocus,c._fMisc,c.lootTables,c.attachedSpells)}const b=filterBox.getValues();mundaneList.filter(a),magicList.filter(a),FilterBox.selectFirstVisible(itemList)}function onSublistChange(){const a=$(`#totalweight`),b=$(`#totalvalue`);let c=0,d=0;ListUtil.sublist.items.forEach(a=>{const b=itemList[+a._values.id],e=+$(a.elm).find(".count").text();b.weight&&(c+=+b.weight*e),b.value&&(d+=Parser.coinValueToNumber(b.value)*e)}),a.text(`${c.toLocaleString()} lb${1<c?"s":""}.`),b.text(`${d.toLocaleString()}gp`)}function getSublistItem(a,b,c){return`
		<li class="row" ${FLTR_ID}="${b}" oncontextmenu="ListUtil.openSubContextMenu(event, this)">
			<a href="#${UrlUtil.autoEncodeHash(a)}" title="${a.name}">
				<span class="name col-6 pl-0">${a.name}</span>
				<span class="weight text-center col-2">${a.weight?`${a.weight} lb${1<a.weight?"s":""}.`:"\u2014"}</span>
				<span class="price text-center col-2">${a.value?a.value.replace(/ +/g,"\xA0"):"\u2014"}</span>
				<span class="count text-center col-2 pr-0">${c||1}</span>
				
				<span class="cost hidden">${a._fCost}</span>
				<span class="id hidden">${b}</span>
			</a>
		</li>
	`}const renderer=Renderer.get();function loadHash(a){function b(a){return Renderer.utils.pBuildFluffTab(a,c,d,a=>d.fluff||a.item.find(a=>a.name===d.name&&a.source===d.source),`data/fluff-items.json`,()=>!0)}renderer.setFirstSection(!0);const c=$(`#pagecontent`).empty(),d=itemList[a],e=Renderer.utils.tabButton("Item",()=>{},function(){c.append(RenderItems.$getRenderedItem(d))}),f=Renderer.utils.tabButton("Info",()=>{},b),g=Renderer.utils.tabButton("Images",()=>{},b.bind(null,!0));d.fluff&&d.fluff.entries?Renderer.utils.bindTabButtons(e,f,g):Renderer.utils.bindTabButtons(e,g),ListUtil.updateSelected()}function loadSubHash(a){a=filterBox.setFromSubHashes(a),ListUtil.setFromSubHashes(a)}