"use strict";class CreatureBuilder extends Builder{constructor(){super({titleSidebarLoadExisting:"Load Existing Creature",titleSidebarDownloadJson:"Download Creatures as JSON",prop:"monster"}),this._bestiaryMetaRaw=null,this._bestiaryFluffIndex=null,this._bestiaryTypeTags=null,this._bestiaryMetaCache=null,this._legendaryGroups=null,this._renderOutputDebounced=MiscUtil.debounce(()=>this._renderOutput(),50),this._generateAttackCache=null}handleSidebarLoadExistingClick(){const e=new SearchWidget({Creature:SearchWidget.CONTENT_INDICES.Creature},async(e,t,n)=>{a();const i=MiscUtil.copy((await Renderer.hover.pCacheAndGet(e,t,n)));if(this._bestiaryFluffIndex[i.source]&&!i.fluff){const e=await DataUtil.loadJSON(`data/bestiary/${this._bestiaryFluffIndex[i.source]}`),t=Renderer.monster.getFluff(i,this._bestiaryMetaRaw,e);t&&(i.fluff=t)}if(i.source=this._ui.source,100!==Parser.crToNumber(i.cr)){const e=Parser.CRS.indexOf(i.cr.cr||i.cr),t=await InputUiUtil.pGetUserEnum({values:Parser.CRS,title:"At Challange Rating...",default:e});if(null!=t&&t!==e){const e=await ScaleCreature.scale(i,Parser.crToNumber(Parser.CRS[t]));delete e._displayName,this.setStateFromLoaded({s:e,m:this.getInitialMetaState()})}else this.setStateFromLoaded({s:i,m:this.getInitialMetaState()})}else this.setStateFromLoaded({s:i,m:this.getInitialMetaState()});delete i.otherSources,this.renderInput(),this.renderOutput()},{defaultCategory:"Creature"}),{$modalInner:t,doClose:a}=UiUtil.getShowModal({title:"Select Creature",cbClose:()=>e.$wrpSearch.detach()});t.append(e.$wrpSearch),e.doFocus()}async pInit(){const[e,t,a,n]=await Promise.all([DataUtil.loadJSON("data/bestiary/meta.json"),DataUtil.loadJSON("data/bestiary/fluff-index.json"),DataUtil.loadJSON("data/makebrew-creature.json"),DataUtil.loadJSON("data/bestiary/index.json")]);this._bestiaryFluffIndex=t,this._bestiaryMetaRaw=e,this._legendaryGroups=[...this._bestiaryMetaRaw.legendaryGroup,...(BrewUtil.homebrew.legendaryGroup||[])],this._bestiaryMetaCache={},this._legendaryGroups.forEach(e=>(this._bestiaryMetaCache[e.source]=this._bestiaryMetaCache[e.source]||{})[e.name]=e),this._jsonCreature=a,this._indexedTraits=elasticlunr(function(){this.addField("n"),this.setRef("id")}),SearchUtil.removeStemmer(this._indexedTraits),this._jsonCreature.trait.forEach((e,t)=>this._indexedTraits.addDoc({n:e.name,id:t})),this._bestiaryTypeTags=[];const i=new Set;Promise.all(Object.values(n).map(e=>DataUtil.loadJSON(`data/bestiary/${e}`))).then(e=>{e.forEach(e=>e.monster.forEach(e=>e.type&&e.type.tags?e.type.tags.forEach(e=>i.add(e.tag||e)):"")),this._bestiaryTypeTags.push(...i)})}_getInitialState(){return{name:"New Creature",size:"M",type:"aberration",source:this._ui?this._ui.source:"",alignment:["N"],ac:[10],hp:{average:4,formula:"1d8"},speed:{walk:30},str:10,dex:10,con:10,int:10,wis:10,cha:10,passive:10,cr:"0"}}setStateFromLoaded(e){var t=Math.floor;if(e&&e.s&&e.m){if(e.s.languages&&!(e.s.languages instanceof Array)&&(e.s.languages=[e.s.languages]),e.s.senses&&!(e.s.senses instanceof Array)&&(e.s.senses=[e.s.senses]),this.__state=e.s,this.__meta=e.m,this.doCreateProxies(),null!=e.m.ixBrew){const t=(BrewUtil.homebrew.monster||[]).findIndex(t=>t.source===e.s.source&&t.name===e.s.name);~t?t!==e.m.ixBrew&&(e.m.ixBrew=t):e.m.ixBrew=null}if(!e.m.profSave&&(e.m.profSave={},e.s.save)){const t=this._getProfBonus();Object.entries(e.s.save).forEach(([a,n])=>{const i=Parser.getAbilityModNumber(e.s[a])+t;+n===+i&&(e.m.profSave[a]=1)})}if(!e.m.profSkill&&(e.m.profSkill={},e.s.skill)){const t=this._getProfBonus();Object.entries(e.s.skill).forEach(([a,n])=>{const i=Parser.skillToAbilityAbv(a),d=Parser.getAbilityModNumber(e.s[i]);if(+n===+(d+t))return e.m.profSkill[a]=1;+n===+(d+2*t)&&(e.m.profSkill[a]=2)})}if(!e.m.autoCalc){if(e.m.autoCalc={proficiency:!0},e.s.hp.formula&&null!=e.s.hp.average){const a=t(Renderer.dice.parseAverage(e.s.hp.formula));e.m.autoCalc.hpAverageSimple=a===e.s.hp.average,e.m.autoCalc.hpAverageComplex=e.m.autoCalc.hpAverageSimple;const n=CreatureBuilder.__$getHpInput__getFormulaParts(e.s.hp.formula);if(n){const t=Parser.getAbilityModNumber(this.__state.con),a=t*n.hdNum;a===(n.mod||0)&&(e.m.autoCalc.hpModifier=!0)}}else e.m.autoCalc.hpAverage=!0,e.m.autoCalc.hpModifier=!0;const a=(e.s.skill&&e.s.skill.perception?+e.s.skill.perception:Parser.getAbilityModNumber(this.__state.wis))+10;e.s.passive&&a===e.s.passive&&(e.m.autoCalc.passivePerception=!0)}this.isEntrySaved=e._m&&null!=this.isEntrySaved?!!e._m.isEntrySaved:null!=e.m.ixBrew,this.mutSavedButtonText(),this.doUiSave()}}doHandleSourcesAdd(){(this._$eles.$selVariantSources||[]).map(e=>{const t=e.val();return e.empty().append(`<option value="">(Same as Creature)</option>`),this._ui.allSources.forEach(t=>e.append(`<option value="${t.escapeQuotes()}">${Parser.sourceJsonToFull(t).escapeQuotes()}</option>`)),this._ui.allSources.indexOf(t)?e.val(t):e[0].selectedIndex=0,e}).forEach(e=>e.change())}renderInput(){this._validateMeta(),this.renderInputControls(),this._renderInputMain()}_validateMeta(){const e=this._meta||this.__meta;e.profSave||(e.profSave={}),e.profSkill||(e.profSkill={}),e.autoCalc||(e.autoCalc={})}_renderInputMain(){this._sourcesCache=MiscUtil.copy(this._ui.allSources);const e=this._ui.$wrpInput.empty();this.doCreateProxies();const t=MiscUtil.debounce(()=>{RenderBestiary.updateParsed(this._state),DiceConvert.cleanHpDice(this._state),TagAttack.tryTagAttacks(this._state),TagHit.tryTagHits(this._state),TagDc.tryTagDcs(this._state),TagCondition.tryTagConditions(this._state),TraitActionTag.tryRun(this._state),LanguageTag.tryRun(this._state),SenseTag.tryRun(this._state),SpellcastingTypeTag.tryRun(this._state),DamageTypeTag.tryRun(this._state),MiscTag.tryRun(this._state),this.renderOutput(),this.doUiSave(),this.isEntrySaved=!1,this.mutSavedButtonText()},33);this._cbCache=t,this._resetTabs("input");const a=["Info","Race","Core","Defence","Abilities","Flavor/Misc"].map((e,t)=>this._getTab(t,e,{hasBorder:!0,tabGroup:"input",stateObj:this._meta,cbTabChange:this.doUiSave.bind(this)})),[n,i,d,r,o,p]=a;$$`<div class="flex-v-center w-100 no-shrink ui-tab__wrp-tab-heads--border">${a.map(e=>e.$btnTab)}</div>`.appendTo(e),a.forEach(t=>t.$wrpTab.appendTo(e)),BuilderUi.$getStateIptString("Name",t,this._state,{nullable:!1,callback:()=>this.renderSideMenu()},"name").appendTo(n.$wrpTab),BuilderUi.$getStateIptString("Short Name",t,this._state,{title:"If not supplied, this will be generated from the creature's full name. Used in Legendary Action header text."},"shortName").appendTo(n.$wrpTab),this._$selSource=this.$getSourceInput(t).appendTo(n.$wrpTab),BuilderUi.$getStateIptNumber("Page",t,this._state,{},"page").appendTo(n.$wrpTab),this.__$getAlignmentInput(t).appendTo(n.$wrpTab),this.__$getCrInput(t).appendTo(n.$wrpTab),this.__$getProfBonusInput(t).appendTo(n.$wrpTab),BuilderUi.$getStateIptNumber("Level",t,this._state,{title:"Used for Sidekicks only"},"level").appendTo(n.$wrpTab),BuilderUi.$getStateIptEnum("Size",t,this._state,{vals:Parser.SIZE_ABVS,fnDisplay:Parser.sizeAbvToFull,type:"string",nullable:!1},"size").appendTo(i.$wrpTab),this.__$getTypeInput(t).appendTo(i.$wrpTab),this.__$getSpeedInput(t).appendTo(i.$wrpTab),this.__$getSenseInput(t).appendTo(i.$wrpTab),this.__$getLanguageInput(t).appendTo(i.$wrpTab),this.__$getAbilityScoreInput(t).appendTo(d.$wrpTab),this.__$getSaveInput(t).appendTo(d.$wrpTab),this.__$getSkillInput(t).appendTo(d.$wrpTab),this.__$getPassivePerceptionInput(t).appendTo(d.$wrpTab),this.__$getAcInput(t).appendTo(r.$wrpTab),this.__$getHpInput(t).appendTo(r.$wrpTab),this.__$getVulnerableInput(t).appendTo(r.$wrpTab),this.__$getResistInput(t).appendTo(r.$wrpTab),this.__$getImmuneInput(t).appendTo(r.$wrpTab),this.__$getCondImmuneInput(t).appendTo(r.$wrpTab),this.__$getSpellcastingInput(t).appendTo(o.$wrpTab),this.__$getTraitInput(t).appendTo(o.$wrpTab),this.__$getActionInput(t).appendTo(o.$wrpTab),this.__$getReactionInput(t).appendTo(o.$wrpTab),BuilderUi.$getStateIptNumber("Legendary Action Count",t,this._state,{title:"If specified, this will override the default number (3) of legendary actions available for the creature.",placeholder:"If left blank, defaults to 3."},"legendaryActions").appendTo(o.$wrpTab),BuilderUi.$getStateIptBoolean("Name is Proper Noun",t,this._state,{title:"If selected, the legendary action intro text for this creature will be formatted as though the creature's name is a proper noun (e.g. 'Tiamat can take...' vs 'The dragon can take...')."},"isNamedCreature").appendTo(o.$wrpTab),BuilderUi.$getStateIptEntries("Legendary Action Intro",t,this._state,{title:"If specified, this custom legendary action intro text will override the default.",placeholder:"If left blank, defaults to a generic intro."},"legendaryHeader").appendTo(o.$wrpTab),this.__$getLegendaryActionInput(t).appendTo(o.$wrpTab),this.__$getLegendaryGroupInput(t).appendTo(o.$wrpTab),this.__$getVariantInput(t).appendTo(o.$wrpTab),this.__$getTokenInput(t).appendTo(p.$wrpTab),this.__$getFluffInput(t).appendTo(p.$wrpTab),this.__$getEnvironmentInput(t).appendTo(p.$wrpTab),BuilderUi.$getStateIptString("Group",t,this._state,{title:"The family this creature belongs to, e.g. 'Modrons' in the case of a Duodrone."},"group").appendTo(p.$wrpTab),BuilderUi.$getStateIptString("Sound Clip URL",t,this._state,{type:"url"},"soundClip").appendTo(p.$wrpTab),BuilderUi.$getStateIptEnum("Dragon Casting Color",t,this._state,{vals:Object.keys(Parser.DRAGON_COLOR_TO_FULL).sort((e,t)=>SortUtil.ascSort(Parser.dragonColorToFull(e),Parser.dragonColorToFull(t))),fnDisplay:e=>Parser.dragonColorToFull(e).uppercaseFirst(),type:"string"},"dragonCastingColor").appendTo(p.$wrpTab),BuilderUi.$getStateIptBoolean("NPC",t,this._state,{title:"If selected, this creature will be filtered out from the Bestiary list by default."},"isNpc").appendTo(p.$wrpTab),BuilderUi.$getStateIptBoolean("Familiar",t,this._state,{title:"If selected, this creature will be included when filtering for 'Familiar' in the Bestiary."},"familiar").appendTo(p.$wrpTab),BuilderUi.$getStateIptStringArray("Search Aliases",t,this._state,{shortName:"Alias",title:"Alternate names for this creature, e.g. 'Illithid' as an alternative for 'Mind Flayer,' which can be searched in the Bestiary."},"alias").appendTo(p.$wrpTab)}__$getTypeInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Type",{isMarked:!0}),n=this._state.type,i=!!n.swarmSize,d=()=>{if(l.length){const e=l.map(e=>{const t=e.$iptPrefix.val().trim(),a=e.$iptTag.val().trim();return a?t?{tag:a,prefix:t}:a:null}).filter(Boolean);this._state.type=e.length?{type:p.val(),tags:e}:p.val()}else this._state.type=p.val();e()},r=()=>{this._state.type={type:p.val(),swarmSize:f.val()},e()},o=$(`<select class="form-control input-xs mb-2">
			<option value="0">Creature</option>
			<option value="1">Swarm</option>
		</select>`).val(i?"1":"0").change(()=>{switch(o.val()){case"0":{g.show(),_.hide(),d();break}case"1":{g.hide(),_.show(),r();break}}}).appendTo(a),p=$(`<select class="form-control input-xs">${Parser.MON_TYPES.map(e=>`<option value="${e}">${e.uppercaseFirst()}</option>`).join("")}</select>`).change(()=>{switch(o.val()){case"0":d();break;case"1":r();}}).appendTo(a).val(n.type||n),l=[],s=$(`<button class="btn btn-xs btn-default">Add Tag</button>`).click(()=>{const e=this.__$getTypeInput__getTagRow(null,l,d);c.append(e.$wrp)}),u=n.tags?n.tags.map(e=>this.__$getTypeInput__getTagRow(e,l,d)):null,c=$$`<div>${u?u.map(e=>e.$wrp):""}</div>`,g=$$`<div class="mt-2">
		${c}
		<div>${s}</div>
		</div>`.appendTo(a).toggle(!i),f=$(`<select class="form-control input-xs mt-2">${Parser.SIZE_ABVS.map(e=>`<option value="${e}">${Parser.sizeAbvToFull(e)}</option>`).join("")}</select>`).change(()=>{this._state.type.swarmSize=f.val(),e()}),_=$$`<div>
		${f}
		</div>`.appendTo(a).toggle(i);return i&&f.val(n.swarmSize),t}__$getTypeInput__getTagRow(e,t,a){const n=$(`<input class="form-control input-xs form-control--minimal mr-2" placeholder="Prefix">`).change(()=>{i.removeClass("error-background"),i.val().trim().length||!n.val().trim().length?a():i.addClass("error-background")});e&&e.prefix&&n.val(e.prefix);const i=$(`<input class="form-control input-xs form-control--minimal mr-2" placeholder="Tag (lowercase)">`).change(()=>{i.removeClass("error-background"),a()});e&&i.val(e.tag||e);const d=$(`<button class="btn btn-xs btn-default mr-2">Add Tag...</button>`).click(async()=>{const e=await InputUiUtil.pGetUserString({title:"Enter a Tag",autocomplete:this._bestiaryTypeTags});null!=e&&(i.val(e),a())}),r=$(`<button class="btn btn-xs btn-danger" title="Remove Row"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{t.splice(t.indexOf(p),1),o.empty().remove(),a()}),o=$$`<div class="flex mb-2">${n}${i}${d}${r}</div>`,p={$wrp:o,$iptPrefix:n,$iptTag:i};return t.push(p),p}__$getAlignmentInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Alignment",{isMarked:!0}),n=()=>{const t=i.map(e=>e.getAlignment());this._state.alignment=t.some(e=>e&&(null!=e.special||void 0!==e.alignment))||1<t.length?t.map(e=>e&&(null!=e.special||e.alignment)?e:{alignment:e}):t[0],e()},i=[],d=$(`<div/>`).appendTo(a);this._state.alignment&&this._state.alignment.some(e=>e&&(null!=e.special||void 0!==e.alignment))||!~CreatureBuilder.__$getAlignmentInput__getAlignmentIx(this._state.alignment)?this._state.alignment.forEach(e=>CreatureBuilder.__$getAlignmentInput__getAlignmentRow(n,i,e).$wrp.appendTo(d)):CreatureBuilder.__$getAlignmentInput__getAlignmentRow(n,i,this._state.alignment).$wrp.appendTo(d);const r=$(`<div/>`).appendTo(a);return $(`<button class="btn btn-xs btn-default">Add Alignment</button>`).appendTo(r).click(()=>{CreatureBuilder.__$getAlignmentInput__getAlignmentRow(n,i).$wrp.appendTo(d),n()}),t}static __$getAlignmentInput__getAlignmentRow(e,t,a){var n=Math.min,i=Math.max;const d=a&&a.chance?"1":a&&a.special?"2":null===a||a&&null===a.alignment?"3":"0",r=$(`<select class="form-control input-xs mb-2">
				<option value="0">Basic Alignment</option>
				<option value="1">Chance-Based Alignment</option>
				<option value="2">Special Alignment</option>
				<option value="3">No Alignment (Sidekick)</option>
			</select>`).val(d).change(()=>{switch(r.val()){case"0":{p.show(),s.hide(),c.hide(),e();break}case"1":{p.show(),s.show(),c.hide(),e();break}case"2":{p.hide(),s.hide(),c.show(),e();break}case"3":{p.hide(),s.hide(),c.hide(),e();break}}}),o=$(`<select class="form-control input-xs mb-2">${CreatureBuilder._ALIGNMENTS.map((e,t)=>e?`<option value="${t}">${Parser.alignmentListToFull(e)}</option>`:`<option disabled>\u2014</option>`).join("")}</select>`).change(()=>e()),p=$$`<div>${o}</div>`.toggle("0"===d||"1"===d);"0"==d&&a&&o.val(CreatureBuilder.__$getAlignmentInput__getAlignmentIx(a.alignment||a)),"1"==d&&a&&o.val(CreatureBuilder.__$getAlignmentInput__getAlignmentIx(a.alignment));const l=$(`<input type="number" class="form-control form-control--minimal input-xs mr-2" min="1" max="100" placeholder="Chance of alignment">`).change(()=>e()),s=$$`<div class="mb-2 flex-v-center">${l}<span>%</span></div>`.toggle("1"==d);"1"==d&&a&&l.val(a.chance);const u=$(`<input class="form-control input-xs form-control--minimal mb-2">`).change(()=>e()),c=$$`<div>${u}</div>`.toggle("2"==d);"2"==d&&a&&u.val(a.special);const g=$(`<button class="btn btn-xs btn-danger mkbru__btn-rm-row mb-2" title="Remove Alignment"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{t.splice(t.indexOf(_),1),f.empty().remove(),e()}),f=$$`<div class="flex-col mkbru__wrp-rows mkbru__wrp-rows--removable">${r}${p}${s}${c}${$$`<div class="text-right">${g}</div>`}</div>`,_={$wrp:f,getAlignment:()=>{switch(r.val()){case"0":return[...CreatureBuilder._ALIGNMENTS[o.val()]];case"1":return{alignment:[...CreatureBuilder._ALIGNMENTS[o.val()]],chance:n(i(0,+l.val()),100)};case"2":{const e=u.val().trim().split(",").map(e=>e.trim()).filter(Boolean);return e.length?e.map(e=>({special:e})):{special:""}}case"3":return null;}}};return t.push(_),_}static __$getAlignmentInput__getAlignmentIx(e){return CreatureBuilder._ALIGNMENTS.findIndex(t=>CollectionUtil.setEq(new Set(t),new Set(e)))}__$getAcInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Armor Class",{isMarked:!0}),n=()=>{this._state.ac=i.map(e=>e.getAc()),e()},i=[],d=$(`<div/>`).appendTo(a);this._state.ac.forEach(e=>CreatureBuilder.__$getAcInput__getAcRow(e,i,n).$wrp.appendTo(d));const r=$(`<div/>`).appendTo(a);return $(`<button class="btn btn-xs btn-default">Add Armor Class Source</button>`).appendTo(r).click(()=>{CreatureBuilder.__$getAcInput__getAcRow(null,i,n).$wrp.appendTo(d),n()}),t}static __$getAcInput__getAcRow(e,t,a){const n=e&&e.from?"1":"0",i=$(`<select class="form-control input-xs mkbru_mon__ac-split">
				<option value="0">Unarmored</option>
				<option value="1">Armor Class From...</option>
			</select>`).val(n).change(()=>{switch(i.val()){case"0":{u.hide(),a();break}case"1":{u.show(),p.length||CreatureBuilder.__$getAcInput__getFromRow(null,p,a).$wrpFrom.appendTo(l),a();break}}}),d=$(`<input type="number" class="form-control form-control--minimal input-xs mr-2 mkbru_mon__ac-split">`).val(e?e.ac||e:10).change(()=>a()),r=$(`<input class="form-control form-control--minimal input-xs" placeholder="when...">`).change(()=>a());e&&e.condition&&r.val(e.condition);const o=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`).change(()=>a());e&&e.braces&&o.prop("checked",e.braces);const p=[],l=$(`<div/>`);e&&e.from&&e.from.forEach(e=>CreatureBuilder.__$getAcInput__getFromRow(e,p,a).$wrpFrom.appendTo(l));const s=$(`<button class="btn btn-xs btn-default mb-2">Add Another Feature/Item</button>`).click(()=>{CreatureBuilder.__$getAcInput__getFromRow(null,p,a).$wrpFrom.appendTo(l),a()}),u=$$`<div class="mb-2 flex-col">
		${l}
		${$$`<div>${s}</div>`}
		</div>`.toggle("1"==n),c=$(`<button class="btn btn-xs btn-danger mkbru__btn-rm-row mb-2" title="Remove AC Source"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{t.splice(t.indexOf(f),1),g.empty().remove(),a()}),g=$$`<div class="flex-col mkbru__wrp-rows mkbru__wrp-rows--removable">
			<div class="flex-v-center mb-2">${d}${i}</div>
			${$$`<div>${u}</div>`}
			<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Condition</span>${r}</div>
			<label class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Surround with brackets</span>${o}</label>
			${$$`<div class="text-right">${c}</div>`}
		</div>`,f={$wrp:g,getAc:()=>{const e=+d.val().trim(),t=isNaN(e)?10:e,a=r.val().trim(),n=o.prop("checked"),l=()=>{if(a){const e={ac:t,condition:a};return n&&(e.braces=!0),e}return t};switch(i.val()){case"0":return l();case"1":{const e=p.map(e=>e.getAcFrom()).filter(Boolean);if(e.length){const i={ac:t,from:e};return a&&(i.condition=a),n&&(i.braces=!0),i}return l()}}}};return t.push(f),f}static __$getAcInput__getFromRow(e,t,a){const n=$(`<input class="form-control form-control--minimal input-xs mr-2" placeholder="From...">`).change(()=>a());e&&n.val(e);const i=ContextUtil.getNextGenericMenuId();ContextUtil.doInitContextMenu(i,(e,t,i,d)=>{const r=+d.data("ctx-id");n.val(CreatureBuilder._AC_COMMON[Object.keys(CreatureBuilder._AC_COMMON)[r]]),a()},Object.keys(CreatureBuilder._AC_COMMON));const d=$(`<button class="btn btn-default btn-xs mr-2">Feature <span class="caret"></span></button>`).click(e=>ContextUtil.handleOpenContextMenu(e,d,i)),r=$(`<button class="btn btn-default btn-xs">Item</button>`).click(()=>{const e=new SearchWidget({Item:SearchWidget.CONTENT_INDICES.Item},(e,t,d)=>{const[r,o]=d.split(HASH_LIST_SEP);n.val(`{@item ${decodeURIComponent(r)}${o===UrlUtil.encodeForHash(SRC_DMG)?"":`|${decodeURIComponent(o)}`}}`),a(),i()},{defaultCategory:"Item"}),{$modalInner:t,doClose:i}=UiUtil.getShowModal({title:"Select Item",cbClose:()=>e.$wrpSearch.detach()});t.append(e.$wrpSearch),e.doFocus()}),o=$(`<button class="btn btn-xs btn-danger mkbru__btn-rm-row--nested-1 ml-2" title="Remove AC Feature/Item"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{t.splice(t.indexOf(l),1),p.empty().remove(),ContextUtil.doTeardownContextMenu(i),a()}),p=$$`<div class="flex mb-2 mkbru__wrp-rows--removable-nested-1">${n}${d}${r}${o}</div>`,l={$wrpFrom:p,getAcFrom:()=>n.val().trim()};return t.push(l),l}__$getHpInput(e){var t=Math.floor;const[a,n]=BuilderUi.getLabelledRowTuple("Hit Points",{isMarked:!0}),i=(()=>{if(null!=this._state.hp.special)return"2";else{const e=CreatureBuilder.__$getHpInput__getFormulaParts(this._state.hp.formula);return null==e?"1":"0"}})(),d=()=>{const e=c.val().trim(),t=+e,a=t?`${0<t?"+":""}${t}`:"";return`${s.val()}d${u.val()}${a}`},r=()=>{switch(o.val()){case"0":{this._state.hp={formula:d(),average:+f.val()};break}case"1":{this._state.hp={formula:v.val(),average:+T.val()};break}case"2":{this._state.hp={special:C.val()};break}}e()},o=$(`<select class="form-control input-xs mb-2">
			<option value="0">Simple Formula</option>
			<option value="1">Complex Formula</option>
			<option value="2">Custom</option>
		</select>`).appendTo(n).val(i).change(()=>{switch(o.val()){case"0":m.show(),S.hide(),b.hide();break;case"1":m.hide(),S.show(),b.hide();break;case"2":m.hide(),S.hide(),b.show();}r()}),p=()=>{if(this._meta.autoCalc.hpModifier){const e=+s.val(),t=Parser.getAbilityModNumber(this._state.con);c.val(e*t),l(),r()}};this._addHook("state","con",p);const l=()=>{if(this._meta.autoCalc.hpAverageSimple){const e=Renderer.dice.parseAverage(d());null!=e&&f.val(t(e))}},s=$(`<select class="form-control input-xs mr-2">${[...Array(50)].map((e,t)=>`<option>${t+1}</option>`)}</select>`).change(()=>{p(),r()}),u=$(`<select class="form-control input-xs mr-2">${Renderer.dice.DICE.map(e=>`<option>${e}</option>`)}</select>`).change(()=>{l(),r()}),c=$(`<input class="form-control form-control--minimal input-xs text-right mr-2" type="number">`).change(()=>{this._meta.autoCalc.hpModifier&&(this._meta.autoCalc.hpModifier=!1,g.removeClass("active")),l(),r()}),g=$(`<button class="btn btn-xs btn-default ${this._meta.autoCalc.hpModifier?"active":""}" title="Auto-calculate modifier from Constitution"><span class="glyphicon glyphicon-refresh"/></button>`).click(()=>{this._meta.autoCalc.hpModifier?(this._meta.autoCalc.hpModifier=!1,this.doUiSave()):(this._meta.autoCalc.hpModifier=!0,p()),g.toggleClass("active",this._meta.autoCalc.hpModifier)}),f=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`).change(()=>{this._meta.autoCalc.hpAverageSimple=!1,r()}),_=$(`<button class="btn btn-xs btn-default ${this._meta.autoCalc.hpAverageSimple?"active":""}" title="Auto-calculate"><span class="glyphicon glyphicon-refresh"/></button>`).click(()=>{this._meta.autoCalc.hpAverageSimple?(this._meta.autoCalc.hpAverageSimple=!1,this.doUiSave()):(this._meta.autoCalc.hpAverageSimple=!0,l()),_.toggleClass("active",this._meta.autoCalc.hpAverageSimple)}),m=$$`<div class="flex-col">
		<div class="flex-v-center mb-2">
			<span class="mr-2 mkbru__sub-name--50">Formula</span>
			${s}
			<span class="mr-2">d</span>
			${u}
			<span class="mr-2">+</span>
			${c}
			${g}
		</div>
		<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Average</span>${f}${_}</div>
		</div>`.toggle("0"===i).appendTo(n);if("0"===i){const e=CreatureBuilder.__$getHpInput__getFormulaParts(this._state.hp.formula);s.val(`${e.hdNum}`),u.val(`${e.hdFaces}`),null!=e.mod&&c.val(e.mod),f.val(this._state.hp.average)}const h=()=>{if(this._meta.autoCalc.hpAverageComplex){const e=Renderer.dice.parseAverage(v.val());null!=e&&T.val(t(e))}},v=$(`<input class="form-control form-control--minimal input-xs text-right">`).change(()=>{h(),r()}),T=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`).change(()=>{this._meta.autoCalc.hpAverageComplex=!1,r()}),y=$(`<button class="btn btn-xs btn-default ${this._meta.autoCalc.hpAverageComplex?"active":""}" title="Auto-calculate from Formula"><span class="glyphicon glyphicon-refresh"/></button>`).click(()=>{this._meta.autoCalc.hpAverageComplex?(this._meta.autoCalc.hpAverageComplex=!1,this.doUiSave()):(this._meta.autoCalc.hpAverageComplex=!0,h()),y.toggleClass("active",this._meta.autoCalc.hpAverageComplex)}),S=$$`<div class="flex-col">
		<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Formula</span>${v}</div>
		<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Average</span>${T}${y}</div>
		</div>`.toggle("1"===i).appendTo(n);"1"===i&&(v.val(this._state.hp.formula),T.val(this._state.hp.average));const C=$(`<input class="form-control form-control--minimal input-xs mb-2">`).change(()=>r()),b=$$`<div>${C}</div>`.toggle("1"===i).appendTo(n);return"1"===i&&C.val(this._state.hp.special),a}static __$getHpInput__getFormulaParts(e){const t=/^(\d*)d(\d+)([-+]\d+)?$/.exec(e.replace(/\s+/g,""));if(!t)return null;const a=t[1]?+t[1]:1;if(0>=a||50<a)return null;const n=+t[2];if(!Renderer.dice.DICE.includes(n))return null;const i={hdNum:a,hdFaces:n};return t[3]&&(i.mod=+t[3]),i}__$getSpeedInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Speed",{isMarked:!0}),n=(t,a)=>{const n=()=>{const t=i.val().trim();if(!t)delete this._state.speed[a],"fly"===a&&delete this._state.speed.canHover;else{const e=+t,n=d.val().trim();this._state.speed[a]=n?{number:e,condition:n}:e,"fly"===a&&(this._state.speed.canHover=!!(n&&/(^|[^a-zA-Z])hover([^a-zA-Z]|$)/i.exec(n)))}e()},i=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`).change(()=>n()),d=$(`<input class="form-control form-control--minimal input-xs" placeholder="${"fly"===a?"(hover)/when...":"when..."}">`).change(()=>n()),r=this._state.speed[a];return null!=r&&(null==r.condition?i.val(r):(i.val(r.number),d.val(r.condition))),$$`<div class="flex-v-center mb-2">
			<span class="mr-2 mkbru__sub-name--33">${t}</span>
			<div class="flex-v-center">${i}<span class="mr-2">ft.</span>${d}</div>
			</div>`};return $$`<div class="flex-col">
		${n("Walk","walk")}
		${n("Burrow","burrow")}
		${n("Climb","climb")}
		${n("Fly","fly")}
		${n("Swim","swim")}
		</div>`.appendTo(a),t}__$getAbilityScoreInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Ability Scores",{isMarked:!0,isRow:!0}),n=(t,a)=>{const n=$(`<input class="form-control form-control--minimal input-xs" type="number">`).val(this._state[a]).change(()=>{this._state[a]=+n.val(),e()});return $$`<div class="flex-v-center mb-2 flex-col mr-1">
			<span class="mb-2 bold">${a.toUpperCase()}</span>
			${n}
			</div>`};return Parser.ABIL_ABVS.forEach(e=>n(Parser.attAbvToFull(e),e).appendTo(a)),t}__$getSaveInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Saving Throws",{isMarked:!0,isRow:!0}),n=(t,a)=>{const n=$(`<input class="form-control form-control--minimal input-xs mb-2" type="number">`).change(()=>{d.removeClass("active"),delete this._meta.profSave[a],this.__$getSaveSkillInput__handleValChange(e,"save",n,a)}),i=()=>{const t=Parser.getAbilityModNumber(this._state[a])+this._getProfBonus();(this._state.save=this._state.save||{})[a]=0>t?`${t}`:`+${t}`,n.val(t),e()},d=$(`<button class="btn btn-xs btn-default" title="Is Proficient">Prof.</button>`).click(()=>{this._meta.profSave[a]?(delete this._meta.profSave[a],n.val(""),this.__$getSaveSkillInput__handleValChange(e,"save",n,a)):(this._meta.profSave[a]=1,r()),d.toggleClass("active",1===this._meta.profSave[a])});this._meta.profSave[a]&&d.addClass("active"),(this._state.save||{})[a]&&n.val(`${this._state.save[a]}`.replace(/^\+/,""));const r=()=>{1===this._meta.profSave[a]&&i()};return this._addHook("state",a,r),this._addHook("meta","profBonus",r),$$`<div class="flex-v-center flex-col mr-1 mb-2">
			<span class="mr-2 bold">${a.toUpperCase()}</span>
			${n}${d}
			</div>`};return Parser.ABIL_ABVS.forEach(e=>n(Parser.attAbvToFull(e),e).appendTo(a)),t}__$getSkillInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Skills",{isMarked:!0}),n=(t,a)=>{const n=Parser.skillToAbilityAbv(a),i=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`).change(()=>{this._meta.profSkill[a]&&(o.removeClass("active"),p.removeClass("active")),delete this._meta.profSkill[a],this.__$getSaveSkillInput__handleValChange(e,"skill",i,a)}),d=t=>{const d=Parser.getAbilityModNumber(this._state[n])+this._getProfBonus()*(2-!t),r={...(this._state.skill||{})};r[a]=0>d?`${d}`:`+${d}`,this._state.skill=r,i.val(d),e()},r=t=>{t?(2===this._meta.profSkill[a]?(delete this._meta.profSkill[a],i.val(""),this.__$getSaveSkillInput__handleValChange(e,"skill",i,a)):(this._meta.profSkill[a]=2,l()),o.removeClass("active"),p.toggleClass("active",2===this._meta.profSkill[a])):(1===this._meta.profSkill[a]?(delete this._meta.profSkill[a],i.val(""),this.__$getSaveSkillInput__handleValChange(e,"skill",i,a)):(this._meta.profSkill[a]=1,l()),o.toggleClass("active",1===this._meta.profSkill[a]),p.removeClass("active"))},o=$(`<button class="btn btn-xs btn-default" title="Is Proficient">Prof.</button>`).click(()=>r());1===this._meta.profSkill[a]&&o.addClass("active");const p=$(`<button class="btn btn-xs btn-default ml-2" title="Has Expertise">Expert.</button>`).click(()=>r(!0));2===this._meta.profSkill[a]&&p.addClass("active"),(this._state.skill||{})[a]&&i.val(`${this._state.skill[a]}`.replace(/^\+/,""));const l=()=>{1===this._meta.profSkill[a]?d():2===this._meta.profSkill[a]&&d(!0)};return this._addHook("state",n,l),this._addHook("meta","profBonus",l),$$`<div class="flex-v-center mb-2">
			<span class="mr-2 mkbru__sub-name--33">${t}</span>
			<div class="text-muted mkbru_mon__skill-attrib-label mr-2 help--subtle" title="This skill is affected by the creature's ${Parser.attAbvToFull(Parser.skillToAbilityAbv(a))} score">(${Parser.skillToAbilityAbv(a).toUpperCase()})</div>
			${i}${o}${p}
			</div>`};return Object.keys(Parser.SKILL_TO_ATB_ABV).sort(SortUtil.ascSort).forEach(e=>n(e.toTitleCase(),e).appendTo(a)),t}__$getSaveSkillInput__handleValChange(e,t,a,n){const i=a.val();if(i&&i.trim()){const e=+i,a={...this._state[t]}||{};a[n]=0>e?`${e}`:`+${e}`,this._state[t]=a}else if(this._state[t]){const e={...this._state[t]};delete e[n],0===Object.keys(e).length?delete this._state[t]:this._state[t]=e}e()}__$getPassivePerceptionInput(e){var t=Math.round;const[a,n]=BuilderUi.getLabelledRowTuple("Passive Perception"),i=()=>{if(this._meta.autoCalc.passivePerception){const a=t((()=>this._state.skill&&this._state.skill.perception&&this._state.skill.perception.trim()?+this._state.skill.perception:Parser.getAbilityModNumber(this._state.wis))()+10);d.val(a),this._state.passive=a,e()}};this._addHook("state","wis",i),this._addHook("state","skill",i);const d=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`).change(()=>{this._meta.autoCalc.passivePerception&&(r.removeClass("active"),this._meta.autoCalc.passivePerception=!1),this._state.passive=t(+d.val()),e()}).val(this._state.passive||0),r=$(`<button class="btn btn-default btn-xs ${this._meta.autoCalc.passivePerception?"active":""}" title="Auto-Calculate Passive Perception"><span class="glyphicon glyphicon-refresh"/></button>`).click(()=>{this._meta.autoCalc.passivePerception?(delete this._meta.autoCalc.passivePerception,this.doUiSave()):(this._meta.autoCalc.passivePerception=!0,i()),r.toggleClass("active",this._meta.autoCalc.passivePerception)});return $$`<div class="flex-v-center">${d}${r}</div>`.appendTo(n),a}__$getVulnerableInput(e){return this.__$getDefencesInput(e,"Damage Vulnerabilities","Vulnerability","vulnerable")}__$getResistInput(e){return this.__$getDefencesInput(e,"Damage Resistances","Resistance","resist")}__$getImmuneInput(e){return this.__$getDefencesInput(e,"Damage Immunities","Immunity","immune")}__$getCondImmuneInput(e){return this.__$getDefencesInput(e,"Condition Immunities","Immunity","conditionImmune")}__$getDefencesInput(e,t,a,n){const[i,d]=BuilderUi.getLabelledRowTuple(t,{isMarked:!0}),r=[],o=$(`<div/>`).appendTo(d),p=$(`<div/>`).appendTo(d),l=()=>{const t=r.map(e=>e.getState());t.length?1!==t.length||t[0].note||t[0].preNote?this._state[n]=t:this._state[n]=[...t[0][n]]:delete this._state[n],e()},s=e=>{const t=CreatureBuilder.__$getDefencesInput__getNodeGroup(a,n,r,l,0,e);r.push(t),t.$ele.appendTo(o)},u=$(`<button class="btn btn-xs btn-default mr-2">Add Group</button>`).appendTo(p).click(()=>s());return this._state[n]&&(this._state[n].some(e=>null==e[n])?s({[n]:this._state[n]}):this._state[n].forEach(e=>s(e))),i}static __$getDefencesInput__getNodeGroup(e,t,a,n,i,d){const r=[],o=(e,t=!0)=>{null==e||(r.push(e),r.sort((e,t)=>("group"===e.type||"special"===e.type)&&e.type===t.type?t.order-e.order:"group"===e.type&&"special"===t.type?1:"special"===e.type&&"group"===t.type?-1:"group"===e.type||"special"===e.type?1:"group"===t.type||"special"===t.type?-1:SortUtil.ascSort(e.type,t.type)||t.order-e.order).forEach(e=>{e.$ele.detach(),_.append(e.$ele)}),t&&n())},p=ContextUtil.getNextGenericMenuId(),l="conditionImmune"===t?Parser.CONDITIONS:Parser.DMG_TYPES;ContextUtil.doInitContextMenu(p,(t,a,i,d)=>{const p=+d.data("ctx-id"),s=(()=>{const t=e=>r.some(t=>t.type===e);if(p<l.length)return t(l[p])?null:CreatureBuilder.__$getDefencesInput__getNodeItem(e,r,n,l[p]);return p===l.length?t("special")?null:CreatureBuilder.__$getDefencesInput__getNodeItem(e,r,n,"special"):void 0})();o(s)},[...l.map(e=>e.toTitleCase()),null,"Special"]);const s=$(`<button class="btn btn-xs btn-default mr-2">Add ${e}</button>`).click(e=>ContextUtil.handleOpenContextMenu(e,s,p)),u=$(`<button class="btn btn-xs btn-default mr-2">Add Child Group</button>`).click(()=>o(CreatureBuilder.__$getDefencesInput__getNodeGroup(e,t,r,n,i+1))),c=$(`<input class="form-control input-xs form-control--minimal mr-2" placeholder="Pre- note">`).change(()=>n()),g=$(`<input class="form-control input-xs form-control--minimal mr-2" placeholder="Post- note">`).change(()=>n()),f=$(`<button class="btn btn-xs btn-danger mkbru__btn-rm-row" title="Remove ${e} Group"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{a.splice(a.indexOf(v),1),h.remove(),n()}),_=$(`<div class="flex-col"/>`),m=$$`<div class="mb-2 flex-v-center">${s}${u}${c}${g}${f}</div>`,h=(()=>{const e=$$`<div class="flex-col ${i?"":"mkbru__wrp-rows"}">${m}${_}</div>`;return i?$$`<div class="flex-v-center w-100"><div class="mkbru_mon__row-indent"/>${e}</div>`:e})();d&&(c.val(d.preNote||""),g.val(d.note||""),d[t].forEach(a=>{"string"==typeof a?o(CreatureBuilder.__$getDefencesInput__getNodeItem(e,r,n,a),!1):null==a.special?o(CreatureBuilder.__$getDefencesInput__getNodeGroup(e,t,r,n,i+1,a),!1):o(CreatureBuilder.__$getDefencesInput__getNodeItem(e,r,n,"special",a.special),!1)}));const v={getState:()=>{const e={[t]:r.map(e=>e.getState()).filter(Boolean)};return c.val().trim()&&(e.preNote=c.val().trim()),g.val().trim()&&(e.note=g.val().trim()),e},$ele:h,type:"group",order:CreatureBuilder._rowSortOrder++};return v}static __$getDefencesInput__getNodeItem(e,t,a,n,i){const d=$(`<button class="btn btn-xxs btn-danger" title="Remove ${e} Entry"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{t.splice(t.indexOf(p),1),r.remove(),a()}),{$ele:r,getState:o}=(()=>{switch(n){case"special":{const e=$(`<input class="form-control form-control--minimal input-xs mr-2">`).change(()=>a());return null!=i&&e.val(i),{$ele:$$`<div class="mb-2 split flex-v-center mkbru__wrp-btn-xxs">${e}${d}</div>`,getState:()=>{const t=e.val().trim();return t?{special:t}:null}}}default:return{$ele:$$`<div class="mb-2 split flex-v-center mkbru__wrp-btn-xxs"><span class="mr-2">&bull; ${n.uppercaseFirst()}</span>${d}</div>`,getState:()=>n};}})(),p={$ele:r,getState:o,type:n,order:CreatureBuilder._rowSortOrder++};return p}__$getSenseInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Senses"),n=()=>{const t=i.val().trim();t?this._state.senses=t.split(StrUtil.COMMA_SPACE_NOT_IN_PARENTHESES_REGEX):delete this._state.senses,e()},i=$(`<input class="form-control input-xs form-control--minimal mr-2">`).change(()=>n());this._state.senses&&this._state.senses.length&&i.val(this._state.senses.join(", "));const d=ContextUtil.getNextGenericMenuId(),r=Object.keys(Parser.SENSE_JSON_TO_FULL).map(e=>e.uppercaseFirst());ContextUtil.doInitContextMenu(d,async(e,t,a,d)=>{const o=+d.data("ctx-id"),p=r[o].toLowerCase(),l=await InputUiUtil.pGetUserNumber({min:0,int:!0,title:"Enter the Number of Feet"});if(null==l)return;const s=i.val().trim(),u=`${p} ${l} ft.`;i.val(s?`${s}, ${u}`:u),n()},r);const o=$(`<button class="btn btn-xs btn-default mr-2 mkbru_mon__btn-add-sense-language">Add Sense</button>`).click(e=>ContextUtil.handleOpenContextMenu(e,o,d)),p=BuilderUi.$getSplitCommasSortButton(i,n);return $$`<div class="flex-v-center">${i}${o}${p}</div>`.appendTo(a),t}__$getLanguageInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Languages"),n=()=>{const t=i.val().trim();t?this._state.languages=t.split(StrUtil.COMMA_SPACE_NOT_IN_PARENTHESES_REGEX):delete this._state.languages,e()},i=$(`<input class="form-control input-xs form-control--minimal mr-2">`).change(()=>n());this._state.languages&&this._state.languages.length&&i.val(this._state.languages.join(", "));const d=Object.entries(this._bestiaryMetaRaw.language).filter(([e,t])=>!CreatureBuilder._LANGUAGE_BLACKLIST.has(e)).map(([e,t])=>"Telepathy"===t?"telepathy":t),r=$(`<button class="btn btn-xs btn-default mr-2 mkbru_mon__btn-add-sense-language">Add Language</button>`).click(async()=>{const e=await InputUiUtil.pGetUserString({title:"Enter a Language",default:"Common",autocomplete:d});if(null!=e){const t=i.val().trim();i.val(t?`${t}, ${e}`:e),n()}}),o=BuilderUi.$getSplitCommasSortButton(i,n,{bottom:[/telepathy/i]});return $$`<div class="flex-v-center">${i}${r}${o}</div>`.appendTo(a),t}__$getCrInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Challenge Rating",{isMarked:!0}),n=null==this._state.cr?"3":this._state.cr.lair?"1":this._state.cr.coven?"2":"0",i=$(`<select class="form-control input-xs mb-2">
			<option value="0">Basic Challenge Rating</option>
			<option value="1">Has Lair Challenge Rating</option>
			<option value="2">Has Coven Challenge Rating</option>
			<option value="3">No Challenge Rating</option>
		</select>`).val(n).change(()=>{switch(i.val()){case"0":{r.show(),p.hide(),s.hide(),this._state.cr=d.val();break}case"1":{r.show(),p.show(),s.hide(),this._state.cr={cr:d.val(),lair:o.val()};break}case"2":{r.show(),p.hide(),s.show(),this._state.cr={cr:d.val(),coven:l.val()};break}case"3":{r.hide(),p.hide(),s.hide(),delete this._state.cr;break}}e()}).appendTo(a),d=$(`<select class="form-control input-xs mb-2">${Parser.CRS.map(e=>`<option>${e}</option>`).join("")}</select>`).val(this._state.cr?this._state.cr.cr||this._state.cr:null).change(()=>{"0"===i.val()?this._state.cr=d.val():this._state.cr.cr=d.val(),e()}),r=$$`<div>${d}</div>`.appendTo(a).toggle("3"!==n),o=$(`<select class="form-control input-xs">${Parser.CRS.map(e=>`<option>${e}</option>`).join("")}</select>`).change(()=>{this._state.cr.lair=o.val(),e()}),p=$$`<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--33">While in lair</span>${o}</div>`.appendTo(a).toggle("1"===n);"1"===n&&o.val(this._state.cr.cr);const l=$(`<select class="form-control input-xs">${Parser.CRS.map(e=>`<option>${e}</option>`).join("")}</select>`).change(()=>{this._state.cr.coven=l.val(),e()}),s=$$`<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--33">While in coven</span>${l}</div>`.appendTo(a).toggle("2"===n);return"2"===n&&l.val(this._state.cr.cr),t}__$getProfBonusInput(e){var t=Math.round;const[a,n]=BuilderUi.getLabelledRowTuple("Proficiency Bonus"),i=()=>{if(this._meta.autoCalc.proficiency){if(null==this._state.cr)d.val(0),this._meta.profBonus=0;else{const e=Parser.crToPb(this._state.cr.cr||this._state.cr);d.val(e),this._meta.profBonus=e}e()}};this._addHook("state","cr",i);const d=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" min="0">`).val(this._getProfBonus()).change(()=>{this._meta.profBonus=t(+d.val()),this._meta.autoCalc.proficiency=!1,e()}),r=$(`<button class="btn btn-xs btn-default ${this._meta.autoCalc.proficiency?"active":""}" title="Auto-calculate from Challenge Rating (DMG p. 274)"><span class="glyphicon glyphicon-refresh"/></button>`).click(()=>{this._meta.autoCalc.proficiency?(this._meta.autoCalc.proficiency=!1,this.doUiSave()):(this._meta.autoCalc.proficiency=!0,i()),r.toggleClass("active",this._meta.autoCalc.proficiency)});return $$`<div class="flex-v-center">${d}${r}</div>`.appendTo(n),a}_getProfBonus(){return null==this._meta.profBonus?null==this._state.cr?0:Parser.crToPb(this._state.cr.cr||this._state.cr):this._meta.profBonus||0}__$getSpellcastingInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Spellcasting",{isMarked:!0}),n=[],i=$(`<div/>`).appendTo(a),d=$(`<div/>`).appendTo(a),r=$(`<button class="btn btn-xs btn-default">Add Spellcasting Trait</button>`).appendTo(d).click(()=>{p(),o()}),o=()=>{if(!n.length)delete this._state.spellcasting;else{const e=n.map(e=>e.getState()).filter(Boolean);e.length?this._state.spellcasting=e:delete this._state.spellcasting}e()},p=e=>{const t=CreatureBuilder.__$getSpellcastingInput__getTraitRow(n,o,e);n.push(t),t.$ele.appendTo(i)};return this._state.spellcasting&&this._state.spellcasting.forEach(e=>p(e)),t}static __$getSpellcastingInput__getTraitRow(e,t,a){const n=()=>{const e={name:r.val().trim()};o.hasClass("active")&&(e.headerEntries=UiUtil.getTextAsEntries(c.val())),e.headerEntries&&!e.headerEntries.length&&delete e.headerEntries,p.hasClass("active")&&(e.footerEntries=UiUtil.getTextAsEntries(g.val())),e.footerEntries&&!e.footerEntries.length&&delete e.footerEntries;const t=(e,a,n)=>{const i=e[a];null==i?e[a]=n:"object"==typeof n&&(n instanceof Array?e[a]=i.concat(n):Object.entries(n).forEach(([e,a])=>t(i,e,a)))};if(i.forEach(a=>{const n=a.getState();null==n||Object.entries(n).forEach(([a,n])=>t(e,a,n))}),SpellcastingTraitConvert.mutSpellcastingAbility(e),e.headerEntries){const t=JSON.stringify(e.headerEntries);/can innately cast {@spell /i.test(t)?e.hidden=[/per day/i.test(t)?"daily":"will"]:delete e.hidden}else delete e.hidden;return Object.keys(e).some(e=>"name"!==e)?e:null},i=[],d=(e,a)=>{const n=CreatureBuilder.__$getSpellcastingInput__getSpellGenericRow(i,t,e,a);i.push(n),n.$ele.appendTo(_)},r=$(`<input class="form-control form-control--minimal input-xs mr-2" placeholder="Trait name">`).change(()=>t());r.val(a?a.name:"Spellcasting");const o=$(`<button class="btn btn-xs btn-default mr-2">Header</button>`).click(()=>{o.toggleClass("active"),c.toggle(o.hasClass("active")),t()}).toggleClass("active",!!(a&&a.headerEntries)),p=$(`<button class="btn btn-xs btn-default mr-2">Footer</button>`).click(()=>{p.toggleClass("active"),g.toggle(p.hasClass("active")),t()}).toggleClass("active",!!(a&&a.footerEntries)),l=ContextUtil.getNextGenericMenuId(),s=[{display:"Cantrips",type:"0",mode:"cantrip"},{display:"\uD835\uDC65th level spells",mode:"level"},null,{display:"Constant effects",type:"constant",mode:"basic"},{display:"At will spells",type:"will",mode:"basic"},{display:"\uD835\uDC65/day (/each) spells",type:"daily",mode:"frequency"},null,{display:"\uD835\uDC65/rest (/each) spells",type:"rest",mode:"frequency"},{display:"\uD835\uDC65/week (/each) spells",type:"week",mode:"frequency"}];ContextUtil.doInitContextMenu(l,async(e,a,n,r)=>{const o=+r.data("ctx-id"),p=s.filter(Boolean)[o];switch(p.type){case"constant":case"will":if(i.some(e=>e.type===p.type))return;}const l={mode:p.mode,type:p.type};if("level"===p.mode){const e=await InputUiUtil.pGetUserNumber({min:1,int:!0});if(null==e)return;l.level=e}switch(p.mode){case"cantrip":case"level":if(i.some(e=>e.type===l.level))return;}d(l),t()},s.map(e=>e?e.display:e));const u=$(`<button class="btn btn-xs btn-default">Add...</button>`).click(e=>ContextUtil.handleOpenContextMenu(e,u,l)),c=$(`<textarea class="form-control form-control--minimal resize-vertical mb-2" placeholder="Header text"/>`).toggle(!!(a&&a.headerEntries)).change(()=>t());a&&a.headerEntries&&c.val(UiUtil.getEntriesAsText(a.headerEntries));const g=$(`<textarea class="form-control form-control--minimal resize-vertical mb-2" placeholder="Footer text"/>`).toggle(!!(a&&a.footerEntries)).change(()=>t());a&&a.footerEntries&&g.val(UiUtil.getEntriesAsText(a.footerEntries));const f=$$`<div class="flex-v-center mb-2">${r}${o}${p}${u}</div>`,_=$$`<div class="flex-col"></div>`,m=$$`<div class="flex-col">${c}${_}${g}</div>`,h=$(`<button class="btn btn-xs btn-danger" title="Remove Trait"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{const a=n();a&&(delete a.name,(a.headerEntries||a.footerEntries||Object.keys(a).some(e=>"headerEntries"!==e&&"footerEntries"!==e))&&!confirm("Are you sure?"))||(e.splice(e.indexOf(T),1),v.empty().remove(),t())}),v=$$`<div class="flex-col mkbru__wrp-rows">
		${f}
		${m}
		<div class="text-right mb-2">${h}</div>
		</div>`;if(a){const e=e=>Object.entries(a[e]).forEach(([t,a])=>d({mode:"frequency",type:e,each:t.endsWith("e"),count:+t[0]},a));a.constant&&d({mode:"basic",type:"constant"},a.constant),a.will&&d({mode:"basic",type:"will"},a.will),a.daily&&e("daily"),a.rest&&e("rest"),a.weekly&&e("weekly"),a.spells&&Object.entries(a.spells).forEach(([e,t])=>{const a=+e;"0"===e?d({mode:"cantrip",type:a},t.spells):d({mode:"level",type:a,lower:t.lower,slots:t.slots,level:a},t.spells)})}const T={$ele:v,getState:n};return T}static __$getSpellcastingInput__getSpellGenericRow(e,t,a,n){const i=(e,t,a)=>{for(let n=0;n<t.length-1;++n)e=e[t[n]]=e[t[n]]||{};e[t.last()]=a},d=[],r=$(`<div class="flex-col"/>`),o=$(`<button class="btn btn-xxs btn-default mr-2" title="Add Spell"><span class="glyphicon glyphicon-plus"/></button>`).click(async()=>{const e={};a.level&&(e.level=a.level),"cantrip"===a.mode&&(e.level=0),s.filterIgnoreLevel&&s.filterIgnoreLevel()&&delete e.level;const n=await SearchWidget.pGetUserSpellSearch(e);n&&(l(n.tag),t())}),p=$(`<button class="btn btn-xxs btn-danger" title="Remove Spell Group"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{e.splice(e.indexOf(c),1),u.empty().remove(),t()}),l=e=>{const a=CreatureBuilder.__$getSpellcastingInput__getSpellGenericRow__getRowItem(d,t,e);d.push(a),d.forEach(e=>e._sortString=Renderer.stripTags(e.getState())),d.sort((e,t)=>SortUtil.ascSortLower(e._sortString,t._sortString)||t.order-e.order).forEach(e=>{e.$ele.detach(),r.append(e.$ele)})},s=(()=>{const e={};switch(a.mode){case"basic":{e.$ele=$$`<i>${"constant"===a.type?"Constant Effects":"At Will"}</i>`,e.getKeyPath=()=>[a.type];break}case"frequency":{const i=$(`<input class="form-control form-control--minimal input-xs mkbru_mon__spell-header-ipt" type="number" min="1" max="9">`).change(()=>t());n?i.val(a.count||1):i.val(1);const d=$(`<input class="mkbru__ipt-cb mkbru__ipt-cb--small-offset" type="checkbox">`).prop("checked",n&&a.each).change(()=>t()),r=(()=>{switch(a.type){case"daily":return"/Day";case"rest":return"/Rest";case"weekly":return"/Week";}})();e.$ele=$$`<div class="flex mkbru_mon__spell-header-wrp mr-4">
					${i}
					<span class="mr-2 italic">${r}</span>
					<label class="flex-v-baseline text-muted small ml-auto"><span class="mr-1">(Each? </span>${d}<span>)</span></label>
					</div>`,e.getKeyPath=()=>[a.type,`${Math.max(Math.min(9,Math.round(+i.val())),1)}${d.prop("checked")?"e":""}`];break}case"cantrip":{e.$ele=$$`<i>Cantrips</i>`,e.getKeyPath=()=>["spells","0","spells"];break}case"level":{const n=$(`<input type="number" class="form-control form-control--minimal input-xs mkbru_mon__spell-header-ipt mr-2">`).val(a.slots||0).change(()=>t()),i=$(`<input type="checkbox" class="mkbru__ipt-cb">`).prop("checked",!!a.lower).change(()=>t());e.$ele=$$`<div class="flex mkbru_mon__spell-header-wrp mr-4">
					<div class="italic">${Parser.spLevelToFull(a.level)}-level Spells</div>
					<div class="flex-v-center text-muted small ml-auto"><span>(</span>${n}<span class="mr-2">Slots</span></div>
					<div class="mkbru_mon__spell-header-divider mr-2"/>
					<label class="flex-v-center text-muted small"><span class="mr-1">Warlock?</span>${i}<span>)</span></label>
					</div>`,e.getKeyPath=()=>["spells",`${a.level}`,"spells"],e.getAdditionalData=()=>[{keyPath:["spells",`${a.level}`,"slots"],value:+n.val()},{keyPath:["spells",`${a.level}`,"lower"],value:i.prop("checked")?1:null}],e.filterIgnoreLevel=()=>i.prop("checked")}}return e})(),u=$$`<div class="flex-col">
		<div class="split flex-v-center mb-2">
			${s.$ele}
			<div class="flex-v-center mkbru__wrp-btn-xxs">${o}${p}</div>
		</div>
		${r}
		<div class="mkbru_mon__spell-divider mb-2"/>
		</div>`;n&&n.forEach(e=>l(e));const c={$ele:u,getState:()=>{const e=d.map(e=>e.getState());if(e.length){const t=s.getKeyPath(),a={};if(i(a,t,e),s.getAdditionalData){const e=s.getAdditionalData();e.filter(e=>null!=e.value).forEach(e=>i(a,e.keyPath,e.value))}return a}return null},type:a.type};return c}static __$getSpellcastingInput__getSpellGenericRow__getRowItem(e,t,a){const n=()=>`&bull; ${Renderer.get().render(a)}`,i=$(`<input class="form-control form-control--minimal input-xs mr-2">`).val(a).change(()=>{a=i.val(),r.html(n()),t()}).hide(),d=$(`<button class="btn btn-xxs btn-default mr-2" title="Toggle Edit Mode"><span class="glyphicon glyphicon-pencil"/></button>`).click(()=>{d.toggleClass("active"),i.toggle(d.hasClass("active")),r.toggle(!d.hasClass("active"))}),r=$(`<div class="mr-2">${n()}</div>`),o=$(`<button class="btn btn-xxs btn-danger" title="Remove Spell"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{e.splice(e.indexOf(s),1),p.empty().remove(),t()}),p=$$`<div class="split flex-v-center mb-2 mkbru_mon__spell-wrp-edit">
		${r}${i}
		<div class="flex-v-center mkbru__wrp-btn-xxs">${d}${o}</div>
		</div>`,l=()=>a,s={$ele:p,getState:l,order:CreatureBuilder._rowSortOrder++};return s}__$getTraitInput(e){return this.__$getGenericEntryInput(e,{name:"Traits",shortName:"Trait",prop:"trait",canReorder:!1,generators:[{name:"Add Predefined Trait",action:()=>{let e;return new Promise(t=>{const a=new SearchWidget({Trait:this._indexedTraits},async t=>{e=t,i(!0)},{defaultCategory:"Trait",searchOptions:{fields:{n:{boost:5,expand:!0}},expand:!0},fnTransform:e=>e.id}),{$modalInner:n,doClose:i}=UiUtil.getShowModal({title:"Select a Trait",cbClose:n=>{if(a.$wrpSearch.detach(),!n)return t(null);const i=MiscUtil.copy(this._jsonCreature.trait[e]);i.entries=JSON.parse(JSON.stringify(i.entries).replace(/<\$name\$>/gi,this._state.name)),t(i)}});n.append(a.$wrpSearch),a.doFocus()})}}]})}__$getActionInput(e){var t=Math.floor;return this.__$getGenericEntryInput(e,{name:"Actions",shortName:"Action",prop:"action",generators:[{name:"Generate Attack",action:()=>new Promise(e=>{const{$modalInner:a,doClose:n}=UiUtil.getShowModal({title:"Generate Attack",cbClose:t=>{if(this._generateAttackCache=D(),!t)return e(null);const a=M();return a?void e(a):e(null)},fullHeight:!0}),i=$(`<input class="form-control form-control--minimal input-xs mr-2" placeholder="Weapon">`),d=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`).change(()=>f.toggle(d.prop("checked"))).prop("checked",!0),r=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`).change(()=>y.toggle(r.prop("checked"))),o=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`),p=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`).change(()=>w.toggle(p.prop("checked"))),l=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`).change(()=>A.toggle(l.prop("checked"))),s=$(`<input class="form-control form-control--minimal input-xs" type="number" value="5">`),u=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Number of Dice" min="1" value="1">`),c=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Dice Type" value="6">`),g=$(`<input class="form-control form-control--minimal input-xs" placeholder="Melee Damage Type" autocomplete="off">`).typeahead({source:Parser.DMG_TYPES}),f=$$`<div class="flex-col"><hr class="hr-3">
								<div class="flex-v-center mb-2"><span class="mr-2 no-shrink">Melee Range (ft.)</span>${s}</div>
								<div class="flex-v-center mb-2">${u}<span class="mr-2">d</span>${c}${g}</div>
								</div>`,_=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`),m=$(`<input class="form-control form-control--minimal input-xs" type="number">`),h=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Number of Dice" min="1" value="1">`),v=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Dice Type" value="6">`),T=$(`<input class="form-control form-control--minimal input-xs" placeholder="Ranged Damage Type">`).typeahead({source:Parser.DMG_TYPES}),y=$$`<div class="flex-col"><hr class="hr-3">
								<div class="flex-v-center mb-2">
									<span class="mr-2 no-shrink">Short Range (ft.)</span>${_}
									<span class="mr-2 no-shrink">Long Range (ft.)</span>${m}
								</div>
								<div class="flex-v-center mb-2">${h}<span class="mr-2">d</span>${v}${T}</div>
								</div>`.hide(),S=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Number of Dice" min="1" value="1">`),C=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Dice Type" value="8">`),b=$(`<input class="form-control form-control--minimal input-xs" placeholder="Two-Handed Damage Type">`).typeahead({source:Parser.DMG_TYPES}),w=$$`<div class="flex-col"><hr class="hr-3">
								<div class="flex-v-center mb-2">${S}<span class="mr-2">d</span>${C}${b}</div>
								</div>`.hide(),k=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Number of Dice" min="1" value="1">`),I=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Dice Type" value="6">`),E=$(`<input class="form-control form-control--minimal input-xs" placeholder="Bonus Damage Type">`).typeahead({source:Parser.DMG_TYPES}),A=$$`<div class="flex-col"><hr class="hr-3">
								<div class="flex-v-center mb-2">${k}<span class="mr-2">d</span>${I}${E}</div>
								</div>`.hide(),N=$(`<button class="btn btn-sm btn-default">Add</button>`).click(()=>d.prop("checked")||r.prop("checked")?void n(!0):JqueryUtil.doToast({type:"warning",content:"At least one of 'Melee' or 'Ranged' must be selected!"})),R=$(`<button class="btn btn-sm btn-danger">Reset</button>`).click(()=>{confirm("Are you sure?")&&x({iptName:"",cbMelee:!0,cbRanged:!1,cbFinesse:!1,cbVersatile:!1,cbBonusDamage:!1,iptMeleeRange:"5",iptMeleeDamDiceCount:"1",iptMeleeDamDiceNum:"6",iptMeleeDamType:"",iptRangedShort:"",iptRangedLong:"",iptRangedDamDiceCount:"1",iptRangedDamDiceNum:"6",iptRangedDamType:"",iptVersatileDamDiceCount:"1",iptVersatileDamDiceNum:"8",iptVersatileDamType:"",iptBonusDamDiceCount:"1",iptBonusDamDiceNum:"6",iptBonusDamType:""})}),M=()=>{const e=this._getProfBonus(),a=Parser.getAbilityModNumber(o.prop("checked")?this._state.dex:this._state.str),[n,f]=[!!d.prop("checked")&&"mw",!!r.prop("checked")&&"rw"],y=`{@atk ${[n?"mw":null,f?"rw":null].filter(Boolean).join(",")}}`,w=[n?`reach ${s.val().trim()||5} ft.`:null,f?(()=>{const e=_.val().trim(),t=m.val().trim();return e||t?e?t?`range ${e}/${t} ft.`:`range ${e}/${e} ft.`:`range ${t}/${t} ft.`:`unlimited range`})():null].filter(Boolean).join(" or "),A=(e,a)=>{const n=+e.val()||1,i=+a.val()||6;return`${t(n*((i+1)/2))} ({@damage ${n}d${i}})`},N=e=>e.val().trim()?` ${e.val().trim()}`:"",R=[d.prop("checked")?`${A(u,c)}${N(g)} damage${r.prop("checked")?` in melee`:""}`:null,r.prop("checked")?`${A(h,v)}${N(T)} damage${d.prop("checked")?` at range`:""}`:null,p.prop("checked")?`${A(S,C)}${N(b)} damage if used with both hands`:null].filter(Boolean).join(", or "),M=l.prop("checked")?`${R}, plus ${A(k,I)}${N(E)} damage`:R;return{name:i.val().trim()||"Unarmed Strike",entries:[`${y} ${`{@hit ${e+a}} to hit`}, ${w}, one target. {@h}${M}.`]}},D=()=>({iptName:i.val(),cbMelee:d.prop("checked"),cbRanged:r.prop("checked"),cbFinesse:o.prop("checked"),cbVersatile:p.prop("checked"),cbBonusDamage:l.prop("checked"),iptMeleeRange:s.val(),iptMeleeDamDiceCount:u.val(),iptMeleeDamDiceNum:c.val(),iptMeleeDamType:g.val(),iptRangedShort:_.val(),iptRangedLong:m.val(),iptRangedDamDiceCount:h.val(),iptRangedDamDiceNum:v.val(),iptRangedDamType:T.val(),iptVersatileDamDiceCount:S.val(),iptVersatileDamDiceNum:C.val(),iptVersatileDamType:b.val(),iptBonusDamDiceCount:k.val(),iptBonusDamDiceNum:I.val(),iptBonusDamType:E.val()}),x=e=>{i.val(e.iptName),d.prop("checked",e.cbMelee).change(),r.prop("checked",e.cbRanged).change(),o.prop("checked",e.cbFinesse).change(),p.prop("checked",e.cbVersatile).change(),l.prop("checked",e.cbBonusDamage).change(),s.val(e.iptMeleeRange),u.val(e.iptMeleeDamDiceCount),c.val(e.iptMeleeDamDiceNum),g.val(e.iptMeleeDamType),_.val(e.iptRangedShort),m.val(e.iptRangedLong),h.val(e.iptRangedDamDiceCount),v.val(e.iptRangedDamDiceNum),T.val(e.iptRangedDamType),S.val(e.iptVersatileDamDiceCount),C.val(e.iptVersatileDamDiceNum),b.val(e.iptVersatileDamType),k.val(e.iptBonusDamDiceCount),I.val(e.iptBonusDamDiceNum),E.val(e.iptBonusDamType)};this._generateAttackCache&&x(this._generateAttackCache),$$`<div class="flex-col">
								<div class="flex-v-center mb-2">
									${i}
									<label class="flex-v-center mr-2"><span class="mr-2">Melee</span>${d}</label>
									<label class="flex-v-center"><span class="mr-2">Ranged</span>${r}</label>
								</div>
								<div class="flex-v-center">
									<label class="flex-v-center mr-2"><span class="mr-2">Finesse</span>${o}</label>
									<label class="flex-v-center mr-2"><span class="mr-2">Versatile</span>${p}</label>
									<label class="flex-v-center"><span class="mr-2">Bonus Damage</span>${l}</label>
								</div>
								${f}
								${y}
								${w}
								${A}
								<div class="split flex-v-center mt-2">${N}${R}</div>
								</div>`.appendTo(a)})}]})}__$getReactionInput(e){return this.__$getGenericEntryInput(e,{name:"Reactions",shortName:"Reaction",prop:"reaction"})}__$getLegendaryActionInput(e){return this.__$getGenericEntryInput(e,{name:"Legendary Actions",shortName:"Legendary Action",prop:"legendary"})}__$getGenericEntryInput(e,t){null==t.canReorder&&(t.canReorder=!0);const[a,n]=BuilderUi.getLabelledRowTuple(t.name,{isMarked:!0}),i=()=>{const a=r.map(e=>e.getState()).filter(Boolean);a&&a.length?this._state[t.prop]=a:delete this._state[t.prop],e()},d=t.canReorder?()=>{r.forEach(e=>e.$ele.detach().appendTo(p)),i()}:null,r=[],o=$(`<div class="relative"/>`).appendTo(n),p=$(`<div/>`).appendTo(o),l={prop:t.prop,shortName:t.shortName,$wrpRowsOuter:o},s=$(`<div/>`).appendTo(n);return $(`<button class="btn btn-xs btn-default">Add ${t.shortName}</button>`).appendTo(s).click(()=>{this.__$getGenericEntryInput__getEntryRow(i,d,l,r).$ele.appendTo(p),i()}),t.generators&&t.generators.forEach(e=>{$(`<button class="btn btn-xs btn-default ml-2">${e.name}</button>`).appendTo(s).click(async()=>{const t=await e.action();null!=t&&(this.__$getGenericEntryInput__getEntryRow(i,d,l,r,t).$ele.appendTo(p),i())})}),this._state[t.prop]&&this._state[t.prop].forEach(e=>this.__$getGenericEntryInput__getEntryRow(i,d,l,r,e).$ele.appendTo(p)),a}__$getGenericEntryInput__getEntryRow(e,t,a,n,i){const d={},r=()=>{const e={name:o.val().trim(),entries:UiUtil.getTextAsEntries(u.val())};if("variant"===a.prop&&(e.type="variant"),g){const t=g.getState();t&&(e.variantSource=t)}return e.name&&e.entries&&e.entries.length?(RechargeConvert.tryConvertRecharge(e),DiceConvert.convertTraitActionDice(e),e):null},o=$(`<input class="form-control form-control--minimal input-xs" placeholder="${a.shortName} name">`).change(()=>e());i&&i.name&&o.val(i.name.trim());const p=t?BuilderUi.$getUpButton(t,n,d):null,l=t?BuilderUi.$getDownButton(t,n,d):null,s=t?BuilderUi.$getDragPad(t,n,d,{cbSwap:e=>{const t={h:e.$iptEntries.css("height")};e.$iptEntries.css({height:d.$iptEntries.css("height")}),d.$iptEntries.css({height:t.h})},$wrpRowsOuter:a.$wrpRowsOuter}):null,u=$(`<textarea class="form-control form-control--minimal resize-vertical mb-2"/>`).change(()=>e());i&&i.entries&&u.val(UiUtil.getEntriesAsText(i.entries));const c=$(`<button class="btn btn-xs btn-danger mb-2" title="Remove ${a.shortName}"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{const t=r();t&&t.entries&&!confirm("Are you sure?")||(n.splice(n.indexOf(d),1),f.empty().remove(),e())}),g="variant"===a.prop?(()=>{const t=$(`<select class="form-control input-xs"><option value="">(Same as creature)</option></select>`).change(()=>e());this._ui.allSources.forEach(e=>t.append(`<option value="${e.escapeQuotes()}">${Parser.sourceJsonToFull(e).escapeQuotes()}</option>`));const a=$(`<input type="number" class="form-control form-control--minimal input-xs" min="0">`).change(()=>e());i&&i.variantSource&&BrewUtil.hasSourceJson(i.variantSource.source)&&(t.val(i.variantSource),i.variantSource.page&&a.val(i.variantSource.page)),(this._$eles.$selVariantSources=this._$eles.$selVariantSources||[]).push(t);const n=$$`<div class="flex-col">
			<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Source</span>${t}</div>
			<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Page</span>${a}</div>
			</div>`;return{$ele:n,getState:()=>{const e={source:t.val().unescapeQuotes(),page:+a.val()};return e.source?(e.page||delete e.page,e):null}}})():null,f=$$`<div class="flex-col mkbru__wrp-rows mkbru__wrp-rows--removable">
		<div class="split flex-v-center mb-2">
			${o}
			<div class="flex-v-center">${p}${l}${s}</div>
		</div>
		${g?g.$ele:null}
		<div class="flex-v-center">${u}</div>
		<div class="text-right">${c}</div>
		</div>`;return d.$ele=f,d.getState=r,d.$iptEntries=u,n.push(d),d}__$getLegendaryGroupInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Legendary Group"),n=this._legendaryGroups.map(({name:e,source:t})=>({name:e,source:t})).sort((e,t)=>SortUtil.ascSortLower(e.name,t.name)||SortUtil.ascSortLower(e.source,t.source)),d=$(`<select class="form-control form-control--minimal input-xs"><option value="-1">None</option></select>`).change(()=>{const t=+d.val();~t?this._state.legendaryGroup=n[t]:delete this._state.legendaryGroup,e()}).appendTo(a);if(n.filter(e=>e.source).forEach((e,t)=>d.append(`<option value="${t}">${e.name}${e.source===SRC_MM?"":` [${Parser.sourceJsonToAbv(e.source)}]`}</option>`)),this._state.legendaryGroup){const e=n.findIndex(e=>e.name===this._state.legendaryGroup.name&&e.source===this._state.legendaryGroup.source);d.val(`${e}`)}return t}__$getVariantInput(e){return this.__$getGenericEntryInput(e,{name:"Variants",shortName:"Variant",prop:"variant"})}__$getTokenInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Token Image URL"),n=$(`<input class="form-control form-control--minimal input-xs mr-2">`).change(()=>d()).val(this._state.tokenUrl||""),i=$(`<button class="btn btn-xs btn-default mr-2" title="Preview Token"><span class="glyphicon glyphicon-fullscreen"/></button>`).click(e=>{const t=n.val().trim();return t?void Renderer.hover.doOpenWindow(e,i[0],{type:"image",href:{type:"external",url:t},data:{hoverTitle:`Token Preview`}}):JqueryUtil.doToast({content:"Please enter an image URL",type:"warning"})}),d=()=>{const t=n.val().trim();t?this._state.tokenUrl=t:delete this._state.tokenUrl,e()};return $$`<div class="flex">${n}${i}</div>`.appendTo(a),t}__$getFluffInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Flavour Info"),n=[],i=()=>{const t={},a=UiUtil.getTextAsEntries(l.val());a&&a.length&&(t.entries=a);const i=n.map(e=>e.getState()).filter(Boolean);i.length&&(t.images=i),t.entries||t.images?this._state.fluff=t:delete this._state.fluff,e()},d=()=>{n.forEach(e=>e.$ele.detach().appendTo(o)),i()},r=$(`<div class="relative"/>`),o=$(`<div class="flex-col"/>`).appendTo(r),p={$wrpRowsOuter:r},l=$(`<textarea class="form-control form-control--minimal resize-vertical mb-2"/>`).change(()=>i()),s=$(`<button class="btn btn-xs btn-default">Add Image</button>`).click(async()=>{const e=await InputUiUtil.pGetUserString({title:"Enter a URL"});e&&(CreatureBuilder.__$getFluffInput__getImageRow(i,d,p,n,{href:{url:e}}).$ele.appendTo(o),i())});return $$`<div class="flex-col">
		${l}
		${r}
		<div>${s}</div>
		</div>`.appendTo(a),this._state.fluff&&(this._state.fluff.entries&&l.val(UiUtil.getEntriesAsText(this._state.fluff.entries)),this._state.fluff.images&&this._state.fluff.images.forEach(e=>CreatureBuilder.__$getFluffInput__getImageRow(i,d,p,n,e).$ele.appendTo(o))),t}static __$getFluffInput__getImageRow(e,t,a,n,i){const d={},r=()=>{const e=o.val().trim();return e?{type:"image",href:{type:"external",url:e}}:null},o=$(`<input class="form-control form-control--minimal input-xs mr-2">`).change(()=>e());if(i){const e=(i||{}).href||{};e.url?o.val(e.url):e.path&&o.val(`${window.location.origin}${e.path}`)}const p=$(`<button class="btn btn-xs btn-default mr-2" title="Preview Image"><span class="glyphicon glyphicon-fullscreen"/></button>`).click(e=>{const t=r();if(!t)return JqueryUtil.doToast({content:"Please enter an image URL",type:"warning"});const a={shiftKey:!0,clientX:e.clientX};Renderer.hover.show({evt:a,ele:p[0],page:"hover",source:{data:{hoverTitle:"Image Preview"},entries:[t]},hash:"",isBookContent:!0})}),l=$(`<button class="btn btn-xs btn-danger" title="Remove Image"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{n.splice(n.indexOf(d),1),$ele.empty().remove(),e()}),s=BuilderUi.$getDragPad(t,n,d,{$wrpRowsOuter:a.$wrpRowsOuter});return d.$ele=$$`<div class="flex-v-center mb-2 mkbru__wrp-rows--removable">${o}${p}${l}${s}</div>`,d.getState=r,n.push(d),d}__$getEnvironmentInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Environment",{isMarked:!0}),n=()=>{const t=d.map(e=>!!e.$ipt.prop("checked")&&e.getVal()).filter(Boolean);t.length?this._state.environment=t:delete this._state.environment,e()},i=$(`<div class="flex-col w-100 mr-2"/>`),d=[];Parser.ENVIRONMENTS.forEach(e=>{const t=$(`<input class="mkbru__ipt-cb mkbru_mon__cb-environment" type="checkbox">`).prop("checked",this._state.environment&&this._state.environment.includes(e)).change(()=>n());d.push({$ipt:t,getVal:()=>e}),$$`<label class="flex-v-center split stripe-odd--faint"><span>${StrUtil.toTitleCase(e)}</span>${t}</label>`.appendTo(i)});const r=(this._state.environment||[]).filter(e=>!Parser.ENVIRONMENTS.includes(e)).filter(e=>e&&e.trim());r.length&&r.forEach(e=>{CreatureBuilder.__$getEnvironmentInput__getCustomRow(n,d,e).$ele.appendTo(i)});const o=$(`<button class="btn btn-default btn-xs mt-2">Add Custom Environment</button>`).click(()=>{CreatureBuilder.__$getEnvironmentInput__getCustomRow(n,d).$ele.appendTo(i)});return $$`<div class="flex-col">
		${i}
		<div class="flex-v-center">${o}</div>
		</div>`.appendTo(a),t}static __$getEnvironmentInput__getCustomRow(e,t,a){const n=$(`<input class="form-control form-control--minimal input-xs">`).val(a?StrUtil.toTitleCase(a):"").change(()=>e()),i=$(`<input class="mkbru__ipt-cb hidden" type="checkbox">`).prop("checked",!0),d=$(`<button class="btn btn-danger btn-xxs"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{r.$ele.remove(),t.splice(t.indexOf(r),1),e()}),r={$ipt:i,getVal:()=>{const e=n.val().toLowerCase().trim();return e||!1},$ele:$$`<label class="flex-v-center split stripe-odd--faint mt-2"><span>${n}</span>${i}${d}</label>`};return t.push(r),r}renderOutput(){this._renderOutputDebounced(),this.mutSavedButtonText()}_renderOutput(){const e=this._ui.$wrpOutput.empty();this._resetTabs("output");const t=["Statblock","Info","Images","Data"].map((e,t)=>this._getTab(t,e,{tabGroup:"output",stateObj:this._meta,cbTabChange:this.doUiSave.bind(this)})),[a,n,i,d]=t;$$`<div class="flex-v-center w-100 no-shrink">${t.map(e=>e.$btnTab)}</div>`.appendTo(e),t.forEach(t=>t.$wrpTab.appendTo(e));const r=$(`<table class="stats monster"/>`).appendTo(a.$wrpTab);RenderBestiary.$getRenderedCreature(this._state,this._bestiaryMetaCache).appendTo(r);const o=$(`<table class="stats"/>`).appendTo(n.$wrpTab);Renderer.utils.pBuildFluffTab(!1,o,this._state,Renderer.monster.getFluff.bind(null,this._state,this._bestiaryMetaCache));const p=$(`<table class="stats"/>`).appendTo(i.$wrpTab);Renderer.utils.pBuildFluffTab(!0,p,this._state,Renderer.monster.getFluff.bind(null,this._state,this._bestiaryMetaCache));const l=$(`<table class="stats stats--book" style="box-shadow: none; border-left: 1px solid #ccc; border-right: 1px solid #ccc;"/>`).appendTo(d.$wrpTab),s=Renderer.get().render({type:"entries",entries:[{type:"code",name:`Data`,preformatted:JSON.stringify(DataUtil.cleanJson(MiscUtil.copy(this._state)),null,"\t")}]});l.append(Renderer.utils.getBorderTr()),l.append(`<tr><td colspan="6">${s}</td></tr>`),l.append(Renderer.utils.getBorderTr())}}CreatureBuilder._ALIGNMENTS=[["U"],["A"],null,["L","G"],["N","G"],["C","G"],["L","N"],["N"],["C","N"],["L","E"],["N","E"],["C","E"],null,["G"],["L"],["C"],["E"],null,["L","G","NY","E"],["C","G","NY","E"],["L","NX","C","G"],["L","NX","C","E"],["NX","NY","N"],null,["NX","C","G","NY","E"],["L","NX","C","NY","G"],["L","NX","C","NY","E"],["NX","L","G","NY","E"]],CreatureBuilder._AC_COMMON={"Unarmored Defense":"unarmored defense","Natural Armor":"natural armor"},CreatureBuilder._LANGUAGE_BLACKLIST=new Set(["CS","X","XX"]),CreatureBuilder._rowSortOrder=0;const creatureBuilder=new CreatureBuilder;ui.creatureBuilder=creatureBuilder,creatureBuilder.ui=ui;