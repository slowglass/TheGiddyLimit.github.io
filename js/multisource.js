"use strict";const JSON_SRC_INDEX="index.json";async function pMultisourceLoad(a,b,c,d,e){const f=await DataUtil.loadJSON(a+JSON_SRC_INDEX);await _pOnIndexLoad(f,a,b,c,d,e)}let loadedSources;async function _pOnIndexLoad(a,b,c,d,e,f){loadedSources={},Object.keys(a).forEach(c=>loadedSources[c]={url:b+a[c],loaded:!1});const g=Object.keys(a),h=g.filter(a=>defaultSourceSelFn(a)),i=Hist.getHashSource(),j=i?Object.keys(a).find(a=>a.toLowerCase()===i.toLowerCase()):null,k=[...new Set(((await FilterBox.pGetStoredActiveSources())||[]).concat((await ListUtil.pGetSelectedSources())||[]).concat(j?[j]:[]))],l=[];if(k&&k.filter(b=>a[b]).filter(a=>-1===$.inArray(a,l)).forEach(a=>l.push(a)),0===l.length&&h.filter(b=>a[b]).forEach(a=>l.push(a)),window.location.hash.length){const[a,...b]=Hist._getHashParts(),c=a.split(HASH_LIST_SEP)[1],d={};g.forEach(a=>d[UrlUtil.encodeForHash(a)]=a);const e=d[c];e&&!l.includes(e)&&l.push(e)}const m=l.map(c=>({src:c,url:b+a[c]}));if(0<m.length){const a=(await Promise.all(m.map(async a=>{const b=await DataUtil.loadJSON(a.url);return loadedSources[a.src].loaded=!0,b}))).flat();await d(loadedSources);let b=[];a.forEach(a=>b=b.concat(a[c])),e(b),f&&(await f()),RollerUtil.addListRollButton(),ListUtil.addListShowHide(),Hist.init(!0)}else await d(loadedSources)}function loadSource(a,b){return function(c,d){const e=loadedSources[c]||loadedSources[Object.keys(loadedSources).find(a=>a.toLowerCase()===c)];e.loaded||"yes"!==d||DataUtil.loadJSON(e.url).then(function(c){b(c[a]),e.loaded=!0})}}function onFilterChangeMulti(a){FilterBox.selectFirstVisible(a)}