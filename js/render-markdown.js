class RendererMarkdown{constructor(){const a=new Renderer;for(const b in a)void 0===this[b]&&(this[b]="function"==typeof a[b]?a[b].bind(this):MiscUtil.copy(a[b]))}static get(){return new RendererMarkdown}_renderEntries(a,b,c,d){this._renderEntriesSubtypes(a,b,c,d,!0)}_renderEntriesSubtypes(a,b,c,d,e){var f=Math.min;const g=2<=c.depth,h=e&&2>c.depth?c.depth+1:c.depth;if(a.name)if(g)b[0]+=`***${a.name}.*** `;else{const d=1===c._typeStack.length&&-1===c.depth?1:f(6,c.depth+3);b[0]+=`\n${"#".repeat(d)} ${a.name}\n`}if(a.entries&&(this._renderEntriesSubtypes_renderPreReqText(a,b,c),a.entries)){const d=c.depth,e=a.entries.length;for(let d=0;d<e;++d)c.depth=h,this._recursiveRender(a.entries[d],b,c,{suffix:"\n"});c.depth=d}}_renderEntriesSubtypes_renderPreReqText(a,b,c){a.prerequisite&&(b[0]+=`*Prerequisite: `,this._recursiveRender({type:"inline",entries:[a.prerequisite]},b,c),b[0]+=`*\n`)}_renderTable(a,b,c,d){var e=Math.max;if(a.intro)for(const d of a.intro)this._recursiveRender(d,b,c);b[0]+="\n",a.caption&&(b[0]+=`##### ${a.caption}\n`);const f=a.colLabels&&a.colLabels.length;if(!f&&(!a.rows||!a.rows.length))return b[0]+=`|   |\n`,b[0]+=`|---|\n`,void(b[0]+=`|   |\n`);let g=a.colLabels;if(!f){const b=e(...a.rows.map(a=>a.length));g=[...Array(b)].map(()=>"")}a.colStyles&&g.length<a.colStyles.length&&(g=g.concat([...Array(a.colStyles.length-g.length)].map(()=>"")));for(const e of g)b[0]+=`| ${e} `;if(b[0]+="|\n",a.colStyles){let c=a.colStyles;g.length>a.colStyles.length&&(c=c.concat([...Array(g.length-a.colStyles.length)].map(()=>"")));for(const a of c)b[0]+=`|`,b[0]+=a.includes("text-center")?":---:":a.includes("text-right")?"---:":"---";b[0]+="|\n"}if(!a.rows)return void(b[0]+=`||\n`);for(const e of a.rows){const a="row"===e.type?e.row:e;for(const d of a){let a;"cell"===d.type?d.roll?d.roll.entry?a=d.roll.entry:null==d.roll.exact?a=d.roll.pad?`${StrUtil.padNumber(d.roll.min,2,"0")}-${StrUtil.padNumber(d.roll.max,2,"0")}`:`${d.roll.min}-${d.roll.max}`:a=d.roll.pad?StrUtil.padNumber(d.roll.exact,2,"0"):d.roll.exact:d.entry&&(a=d.entry):a=d,b[0]+="| ";const e=this._adjustDepth(c,1);this._recursiveRender(a,b,c),c.depth=e,b[0]+=" "}b[0]+="|\n"}if(a.footnotes)for(const d of a.footnotes){const a=this._adjustDepth(c,1);this._recursiveRender(d,b,c),c.depth=a}if(a.outro)for(const d of a.intro)this._recursiveRender(d,b,c);b[0]+="\n"}_renderString(a,b,c,d){b[0]+=a}_renderPrimitive(a,b,c,d){b[0]+=`${a}`}}class MarkdownConverter{static getEntries(a){if(a=a.trim(),!a)return[];a=this._getCleanGmBinder(a);const b=a.split("\n").map(a=>a.trimEnd());return this._coalesceCreatures(b),this._convertCreatures(b),this._coalesceInsetsReadalouds(b),this._convertInsetsReadalouds(b),this._coalesceTables(b),this._convertTables(b),this._coalesceLists(b),this._convertLists(b),this._coalesceHeaders(b),this._convertInlineStyling(b),this._cleanEmptyLines(b),this._cleanEntries(b),b}static _getCleanGmBinder(a){a=a.replace(/(^|\n)\s*\\(pagebreakNum|pagebreak|columnbreak)/gi,"");try{const b=$(`<div>${a}</div>`);b.find("*").remove(),a=b.text()}catch(a){setTimeout(()=>{throw a})}return a}static _coalesceCreatures(a){for(let b=0;b<a.length;++b){const c=a[b].trim();if("___"===c||"---"===c){let c=1;for(;b+c<a.length;++c){const d=a[b+c];if(!d||!d.startsWith(">"))break}const d=a.slice(b,b+c);1===d.length?(a.splice(b,1),b--):a.splice(b,c,{mdType:"creature",lines:d})}}}static _convertCreatures(a){for(let b=0;b<a.length;++b){const c=a[b];"string"==typeof c||"creature"!==c.mdType||(a[b]={type:"inset",name:"(To convert creature statblocks, please use the Text Converter utility)",entries:c.lines.slice(1).map(a=>a.slice(1).trim())})}}static _coalesce_getLastH5Index(a,b,c){if(!("string"==typeof a))return-1;else if(a.trim())return a.startsWith("##### ")?b:-1;return c}static _coalesceConvert_doRecurse(a,b){if("object"!=typeof a)throw new TypeError(`Non-object ${a} passed to object handler!`);if(a instanceof Array)b(a),a.forEach(a=>{"object"!=typeof a||this._coalesceConvert_doRecurse(a,b)});else if(a.type){const c=MarkdownConverter._ENTRIES_WITH_CHILDREN.find(b=>b.type===a.type&&a[b.key]);c&&this._coalesceConvert_doRecurse(a[c.key],b)}}static _coalesceTables(a){let b=-1;for(let c=0;c<a.length;++c){if(0<c){const d=a[c-1];b=this._coalesce_getLastH5Index(d,c-1,b)}let d=a[c],e=a[c+1];if("string"==typeof d&&"string"==typeof e&&d.includes("|")&&e.includes("|")&&e.includes("---")&&/^[ |:-]+$/gi.exec(e)){d=d.trim(),e=e.trim();let f=2;for(;f<a.length;++f){const b=a[c+f];if(!b||!this._coalesceTables_isTableLine(b))break}if(null!=b&&~b){const d=a.slice(b,c+f);a.splice(b,f+(c-b),{mdType:"table",caption:d[0].replace("##### ",""),lines:d.slice(1)})}else{const b=a.slice(c,c+f);a.splice(c,f,{mdType:"table",lines:b})}}}}static _convertTables(a){for(let b=0;b<a.length;++b){const c=a[b];if("string"!=typeof c)if(!c.mdType)this._coalesceConvert_doRecurse(c,this._convertTables.bind(this));else{if("table"!==c.mdType)continue;a[b]=this.getConvertedTable(c.lines,c.caption)}}}static _coalesceTables_isTableLine(a){return!("string"!=typeof a)&&(a=a.trim(),!!a.includes("|")&&!/^#+ /.test(a)&&!a.startsWith("> ")&&!/^[-*+]/.test(a))}static _coalesceLists(a){for(let b=0;b<a.length;++b){const c=a[b];if("string"!=typeof c)this._coalesceConvert_doRecurse(c,this._coalesceLists.bind(this));else{const d=this._coalesceLists_isListItem(c);if(d){let c=1,d=0;for(;b+c<a.length;++c){const e=a[b+c];if(!e||!e.trim())if(1>d++)continue;else break;if(d=0,"string"!=typeof e)break;if(!this._coalesceLists_isListItem(e))break}const e=a.slice(b,b+c);a.splice(b,c,{mdType:"list",lines:e.filter(a=>a.trim())})}}}}static _coalesceLists_isListItem(a){return /^(\s*)\* /.test(a)||/^(\s*)- /.test(a)||/^(\s*)\+ /.test(a)}static _convertLists(a){for(let b=0;b<a.length;++b){const c=a[b];if("string"!=typeof c)if(!c.mdType)this._coalesceConvert_doRecurse(c,this._convertLists.bind(this));else{if("list"!==c.mdType)continue;c.lines=this._convertLists_doNormalise(c.lines);const d=[],e=()=>d.length?d.length-1:null;c.lines.forEach(a=>{const b=a.length-a.trimStart().length,c=a.trim();if(null==e()){d.push({type:"list",items:[c]})}else if(b===e())d.last().items.push(c);else if(b>e()){const a={type:"list",items:[c]};d.last().items.push(a),d.push(a)}else if(b<e()){for(;b<e();)d.pop();d.length?d.last().items.push(c):d.push({type:"list",items:[c]})}}),a.splice(b,1,d[0])}}}static _convertLists_doNormalise(a){var b=Math.max;const c=a=>a.replace(/^\s*[-+*]\s*/,""),d=(a,b)=>null==a[0]&&null==a[1]||b>=a[0]-1&&b<=a[1]+1,e=(a,b)=>a[0]=a[1]=b,f=(a,c)=>{null==a[0]&&null==a[1]?(a[0]=c,a[1]=c):(a[0]=Math.min(a[0],c),a[1]=b(a[1],c))};let g=0;const h=[null,null];return a.map(a=>{const i=a.length-a.trimStart().length;if(d(h,i))f(h,i);else if(i>h[1])g++,e(h,i);else if(i<h[0]){const a=Math.floor((h[0]-i)/2);g=b(0,g-a),e(h,i)}return`${" ".repeat(g)}${c(a)}`})}static _coalesceInsetsReadalouds(a){const b=a=>a.replace(/^>>?\s*/,"");for(let c,d=0;d<a.length;++d)if(c=a[d],"string"!=typeof c)this._coalesceConvert_doRecurse(c,this._coalesceInsetsReadalouds.bind(this));else if(c=c.trim(),this._coalesceInsets_isInsetLine(c)||this._coalesceInsets_isReadaloudLine(c)){let e=this._coalesceInsets_isReadaloudLine(c)?"insetReadaloud":"inset",f=1;const g=/^>\s*#####\s+/.test(c)?c.replace(/^>\s*#####\s+/,""):null;for(;f<a.length;++f){const b=a[d+f];if("object"!=typeof b){if(!b)break;if("insetReadaloud"==e&&!this._coalesceInsets_isReadaloudLine(b))break;if("inset"==e&&!this._coalesceInsets_isInsetLine(b))break}}const h=a.slice(d,d+f).map(b),i={mdType:e,lines:h};g&&(i.name=g,h.shift()),a.splice(d,f,i)}}static _coalesceInsets_isReadaloudLine(a){return a.trim().startsWith(">>")}static _coalesceInsets_isInsetLine(a){return a.trim().startsWith(">")}static _convertInsetsReadalouds(a){for(let b=0;b<a.length;++b){const c=a[b];if("string"!=typeof c&&("inset"===c.mdType||"insetReadaloud"===c.mdType)){const d={type:c.mdType,name:c.name,entries:c.lines};d.name&&d.name.trim()||delete d.name,a[b]=d}}}static _coalesceHeaders(a){const b=[],c={_:0};for(;c._<a.length;++c._){let d=a[c._];if(!("string"!=typeof d))d=d.trim();else if(!b.length)continue;else{a.splice(c._--,1),b.last().entries.push(d);continue}const e=/^(#+) /.exec(d),f=/\*\*\*\s*([^.?!:]+[.?!:])\s*\*\*\*(.*)/.exec(d),g=/___\s*([^.?!:]+[.?!:])\s*___(.*)/.exec(d);if(e){const e=d.replace(/^#+ /,""),f=d.length-(e.length+1);1===f?this._coalesceHeaders_addBlock(a,c,b,-2,e):2===f?this._coalesceHeaders_addBlock(a,c,b,-1,e):3===f?this._coalesceHeaders_addBlock(a,c,b,0,e):4===f?this._coalesceHeaders_addBlock(a,c,b,1,e):5===f?this._coalesceHeaders_addBlock(a,c,b,1,e):void 0}else if(f||g){const d=f||g,e=d[1],h=d[2];this._coalesceHeaders_addBlock(a,c,b,2,e.replace(/[.?!:]\s*$/,"")),b.last().entries.push(h)}else{if(!b.length)continue;a.splice(c._--,1),b.last().entries.push(d)}}}static _coalesceHeaders_getStackDepth(a){if(!a.length)return null;let b=0,c=0;for(let d=a.length-1;0<=d;--d){const e=a[d];if("section"===e.type){c=-1;break}else b++}return c+b}static _coalesceHeaders_addBlock(a,b,c,d,e){const f=-2===d?-1:d,g=this._coalesceHeaders_getStackDepth(c);if(null==g||-2===d){for(;c.length;)c.pop();a[b._]=this._coalesceHeaders_getRoot(c,d),0>=d?c.last().name=e:this._coalesceHeaders_handleTooShallow(c,f,e)}else g===f?this._coalesceHeaders_handleEqual(a,b,c,d,f,e):g<f?(a.splice(b._--,1),this._coalesceHeaders_handleTooShallow(c,f,e)):g>f&&this._coalesceHeaders_handleTooDeep(a,b,c,d,f,e)}static _coalesceHeaders_getRoot(a,b){const c={type:0>b?"section":"entries",name:"",entries:[]};return a.push(c),c}static _coalesceHeaders_handleEqual(a,b,c,d,e,f){if(1<c.length)c.pop();else if(-1!==e){const b={type:"section",entries:[c[0]]},d=a.indexOf(c[0]);if(~d)throw new Error(`Could not find root in buffer!`);a[d]=b,c.pop(),c.push(b)}if(c.length){a.splice(b._--,1);const e={type:0>d?"section":"entries",name:f,entries:[]};c.last().entries.push(e),c.push(e)}else a[b._]=this._coalesceHeaders_getRoot(c,d),c.last().name=f}static _coalesceHeaders_handleTooShallow(a,b,c){for(;this._coalesceHeaders_getStackDepth(a)<b;){const b={type:"entries",name:"",entries:[]};a.last().entries.push(b),a.push(b)}a.last().name=c}static _coalesceHeaders_handleTooDeep(a,b,c,d,e,f){for(;this._coalesceHeaders_getStackDepth(c)>e&&1<c.length;)c.pop();this._coalesceHeaders_handleEqual(a,b,c,d,e,f)}static _convertInlineStyling(a){var b=Math.min;const c=MiscUtil.getWalker().walk("convertInlineStyling",a,{object:(a,c)=>{for(const d of MarkdownConverter._ENTRIES_WITH_CHILDREN)c.type===d.type&&c[d.key]&&(c[d.key]=c[d.key].map(a=>"string"==typeof a?(a=a.replace(/(\*+)(.+?)(\*+)|(_+)(.+?)(_+)/g,(...a)=>{const[c,d,e]=a[1]?[a[1],a[2],a[3]]:[a[4],a[5],a[6]],f=b(c.length,e.length),g=c.slice(f),h=e.slice(f);return 1===f?`{@i ${g}${d}${h}}`:2===f?`{@b ${g}${d}${h}}`:`{@b {@i ${g}${d}${h}}}`}),a=a.replace(/~~(.+?)~~/g,(...a)=>`{@s ${a[1]}}`),a=a.replace(/\[(.+?)]\((.+?)\)/g,(...a)=>`{@link ${a[1]}|${a[2]}}`),a):a));return c}});for(;a.length;)a.pop();a.push(...c)}static _cleanEmptyLines(a){const b=MiscUtil.getWalker().walk("cleanEmptyLines",a,{array:(a,b)=>b.map(a=>"string"==typeof a?a.trim():a)});for(;a.length;)a.pop();a.push(...b);const c=MiscUtil.getWalker().walk("cleanEmptyLines",a,{array:(a,b)=>b.filter(a=>a&&("string"!=typeof a||a.trim()))});for(;a.length;)a.pop();a.push(...c)}static _cleanEntries(a){function b(a){"object"==typeof a&&(a instanceof Array?a.forEach(a=>b(a)):(("section"===a.type||"entries"===a.type)&&null!=a.name&&!a.name.trim()&&delete a.name,a.entries&&!a.entries.length&&delete a.entries,Object.values(a).forEach(a=>b(a))))}b(a)}static getConvertedTable(a,b){const c=a.filter(a=>a&&a.trim());c.every(a=>a.trim().startsWith("|"))&&(a=a.map(a=>a.replace(/^\s*\|(.*?)$/,"$1"))),c.every(a=>a.trim().endsWith("|"))&&(a=a.map(a=>a.replace(/^(.*?)\|\s*$/,"$1")));const d={type:"table",caption:b,colLabels:[],colStyles:[],rows:[]};let e=!1,f=[];return a.map(a=>a.trim()).filter(Boolean).forEach(a=>{const b=a.split("|").map(a=>a.trim());b.length&&(b.every(a=>!a||!!/^:?\s*---+\s*:?$/.exec(a))?(f=b.map(a=>a.startsWith(":")&&a.endsWith(":")?"text-center":a.startsWith(":")?"text-align-left":a.endsWith(":")?"text-right":""),e=!0):e?d.rows.push(b):d.colLabels=b)}),d.colStyles=f,this.postProcessTable(d),d}static postProcessTable(a){var b=Math.max,c=Math.min;(function(){const c=b(a.colLabels,...a.rows.map(a=>a.length));a.rows.forEach(a=>{for(;a.length<c;)a.push("")})})(),function(){const d=80;let e=!0;const f=(()=>{if(!a.rows.length)return null;const f=[...Array(a.rows[0].length)].map(()=>0),g=[...Array(a.rows[0].length)].map((b,c)=>a.colLabels[c]?a.colLabels[c].length:0);return a.rows.forEach(a=>{a.forEach((a,h)=>{a.length>d&&(e=!1),f[h]+=c(d,a.length),g[h]=b(g[h],a.length)})}),{avgWidths:f.map(b=>b/a.rows.length),maxWidths:g}})();if(null==f)return;const{avgWidths:g,maxWidths:h}=f;(b=>{const c=b.reduce((c,a)=>c+a,0),d=(()=>{const a=c/12,d=b.map((a,b)=>({ix:b,val:a})).sort((c,a)=>SortUtil.ascSort(c.val,a.val));for(let b=0;b<d.length-1;++b){const c=d[b];if(c.val<a){const e=a-c.val;d[b].val=a;const f=e/d.length-(b+1);for(let a=b+1;a<d.length;++a)d[a].val-=f}}return d.sort((c,a)=>SortUtil.ascSort(c.ix,a.ix)).map(a=>a.val)})();let e=d.map(a=>a/c);for(;1<e.reduce((c,a)=>c+a,0);){const a=1-e.reduce((c,a)=>c+a,0);e=e.map(b=>b+a/e.length)}const f=e.map(a=>Math.round(12*a));f.forEach((b,c)=>{const d=`col-${b}`;a.colStyles[c]=a.colStyles[c]?`${a.colStyles[c]} ${d}`:d})})(e?h:g)}();let d=!0;(function(){a.rows.forEach(a=>{isNaN(+a[0])&&(d=!1)}),d&&!a.colStyles.includes("text-center")&&(a.colStyles[0]+=" text-center")})(),function(){a.rows=a.rows.map(a=>a.map(a=>a.replace(RollerUtil.DICE_REGEX,`{@dice $&}`)))}(),function(){a.colStyles.forEach((b,c)=>{if(b.includes("text-center")||b.includes("text-right"))return;const d={number:0,text:0};a.rows.forEach(a=>{if("string"!=typeof a[c])return d.text++;const b=a[c].replace(/[.,]/g,"").replace(/(^| )(cp|sp|gp|pp|lb\.|ft\.)( |$)/g,"").trim();d[isNaN(+b)?"text":"number"]++}),.8<=d.number/a.rows.length&&(a.colStyles[c]+=` text-right`)})}(),function(){for(let b=a.colStyles.length-1;0<=b;--b){const c=a.colStyles[b];if(c.includes("text-center")||c.includes("text-right"))continue;if(0==b&&1<a.colStyles.length&&a.colStyles.filter((a,b)=>0!==b).some(a=>!a.includes("text-center")))continue;const d={short:0,long:0};a.rows.forEach(a=>{if("string"!=typeof a[b])return d.long++;const c=a[b].split(" ");d[3>=c.length?"short":"long"]++}),.8<=d.short/a.rows.length&&(a.colStyles[b]+=` text-center`)}}(),this._doCleanTable(a)}static _doCleanTable(a){a.caption||delete a.caption,a.colLabels&&!a.colLabels.some(Boolean)&&delete a.colLabels,a.colStyles&&!a.colStyles.some(Boolean)&&delete a.colStyles}}MarkdownConverter._ENTRIES_WITH_CHILDREN=[{type:"section",key:"entries"},{type:"entries",key:"entries"},{type:"inset",key:"entries"},{type:"list",key:"items"},{type:"table",key:"rows"}];