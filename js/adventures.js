"use strict";class Adventures{static sortAdventures(c,d,e,f){function g(){return SortUtil.ascSort(d.name,e.name)}function h(c,a){return a.getTime()-c.getTime()}function i(a,b){const c=a(d[b]||"",e[b]||"");return c||g()}return d=c[d.elm.getAttribute(FLTR_ID)],e=c[e.elm.getAttribute(FLTR_ID)],"name"===f.valueName?g():"storyline"===f.valueName?i(SortUtil.ascSort,"storyline"):"level"===f.valueName?i(SortUtil.ascSort,"_startLevel"):"published"===f.valueName?i(h,"_pubDate"):void 0}static getLevelsStr(a){return a.level.custom?a.level.custom:`Level ${a.level.start}\u2013${a.level.end}`}static getDateStr(a){const b=new Date(a.published);return MiscUtil.dateToStr(b)}}const adventuresList=new BooksList({contentsUrl:"data/adventures.json",sortFn:Adventures.sortAdventures,dataProp:"adventure",enhanceRowDataFn:a=>{a._startLevel=a.level.start||20,a._pubDate=new Date(a.published)},rootPage:"adventure.html",rowBuilderFn:a=>`<span class="col-6-2 name">${a.name}</span>
		<span class="col-2-5 adv-detail">${a.storyline||"\u2014"}</span>
		<span class="col-1-3 adv-detail">${Adventures.getLevelsStr(a)}</span>
		<span class="col-2 adv-detail">${Adventures.getDateStr(a)}</span>`});window.onload=adventuresList.onPageLoad.bind(adventuresList);function handleBrew(a){return adventuresList.addData(a),Promise.resolve()}